{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/containers/UserPage.js\";\nimport React from \"react\";\nimport UserCard from \"../components/UserCard\";\nimport ProjectInfo from \"../components/ProjectInfo\";\nimport IssueItem from \"../components/IssueItem\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { Typography } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport axios from \"axios\";\nimport * as api_links from \"../APILinks\";\nimport AlertDialog from \"../components/AlertDialog\";\nimport UtilityComponent from \"../components/UtilityComponent\";\nimport HEADER_NAV_TITLES from \"../header_nav_titles\";\nexport default function UserPage(props) {\n  const isMobile = useMediaQuery(\"(max-width: 700px)\");\n  const enrollmentNumber = props.match.params.enrollmentNumber;\n  const [user, setUser] = React.useState({});\n  const [projectList, setProjectList] = React.useState([]);\n  const [issueList, setIssueList] = React.useState({\n    issuesAssigned: [],\n    issuesReported: []\n  });\n  const [page, setPage] = React.useState({\n    assigned: 1,\n    reported: 1\n  });\n  const [totalPages, setTotalPages] = React.useState({\n    assigned: 1,\n    reported: 1\n  });\n  const [tagNameColorList, setTagNameColorList] = React.useState([]);\n  const [userNameList, setUserNameList] = React.useState([]);\n  const [enrNoList, setEnrNoList] = React.useState([]);\n  const [statusList, setStatusList] = React.useState([]);\n  const [alert, setAlert] = React.useState({\n    open: false\n  });\n\n  const openAlert = (action, title, description, cancel, confirm, data) => {\n    setAlert({\n      open: true,\n      title,\n      description,\n      cancel,\n      confirm,\n      action,\n      data\n    });\n  };\n\n  const closeAlert = () => {\n    setAlert(prevAlertState => ({\n      open: false\n    }));\n  };\n\n  const confirmAlert = (event, choice, id) => {\n    switch (event) {\n      case \"delete_project\":\n        choice && handleProjectDelete(id);\n        break;\n    }\n  };\n\n  const handleProjectDelete = projectID => {\n    axios.delete(api_links.API_ROOT + `projects/${projectID}/`).then(res => {\n      let audio = new Audio(\"../sounds/navigation_selection-complete-celebration.wav\");\n      audio.play();\n      setTimeout(() => {\n        window.location.href = \"/projects\";\n      }, 1000);\n    }).catch(err => {\n      console.log(err);\n      let audio = new Audio(\"../sounds/alert_error-03.wav\");\n      audio.play();\n    });\n  };\n\n  const getDemReportedIssues = (userId, pageNumber = 1) => {\n    const token = localStorage.getItem(\"token\");\n    let config1 = {\n      headers: {\n        Authorization: \"Token \" + token\n      },\n      params: {\n        page: pageNumber,\n        reporter: userId\n      }\n    };\n    axios.get(api_links.API_ROOT + \"issues/\", config1).then(res => {\n      setIssueList(prev => ({ ...prev,\n        issuesReported: res.data.results\n      }));\n      setTotalPages(prev => ({ ...prev,\n        reported: res.data.total_pages\n      }));\n    }).catch(err => console.log(err));\n  };\n\n  const getDemAssignedIssues = (userId, pageNumber = 1) => {\n    const token = localStorage.getItem(\"token\");\n    let config2 = {\n      headers: {\n        Authorization: \"Token \" + token\n      },\n      params: {\n        page: pageNumber,\n        assigned_to: userId\n      }\n    };\n    axios.get(api_links.API_ROOT + \"issues/\", config2).then(res => {\n      setIssueList(prev => ({ ...prev,\n        issuesAssigned: res.data.results\n      }));\n      setTotalPages(prev => ({ ...prev,\n        assigned: res.data.total_pages\n      }));\n    }).catch(err => console.log(err));\n  };\n\n  const [currentUser, setCurrentUser] = React.useState({});\n\n  async function fetchCurrentUserInfo() {\n    axios.get(`${api_links.API_ROOT}current_user/`).then(res => {\n      setCurrentUser(res.data[0]);\n    }).catch(err => console.log(err));\n  }\n\n  React.useEffect(() => {\n    document.getElementById(\"main-main\").scrollTo(0, 0);\n    fetchCurrentUserInfo();\n    setAlert({\n      open: false\n    });\n    axios.get(api_links.API_ROOT + \"issuestatus/\").then(res => {\n      setStatusList(res.data.map(status => ({\n        text: status.status_text,\n        color: status.color,\n        type: status.status_type,\n        id: status.id\n      })));\n    }).catch(err => console.log(err));\n    axios.get(api_links.API_ROOT + `userByEnrNo/${enrollmentNumber}/`).then(res => {\n      setUser(res.data);\n      getDemReportedIssues(res.data.id);\n      getDemAssignedIssues(res.data.id);\n      const token = localStorage.getItem(\"token\");\n      let config = {\n        headers: {\n          Authorization: \"Token \" + token\n        },\n        params: {\n          members: res.data.id\n        }\n      };\n      axios.get(api_links.API_ROOT + \"projects/\", config).then(res2 => {\n        setProjectList(res2.data);\n      }).catch(err => console.log(err));\n      axios.get(api_links.API_ROOT + \"tags/\").then(res4 => {\n        let tagNameColorList = {};\n        res4.data.map(tag => {\n          tagNameColorList[tag.id] = {\n            tagText: tag.tag_text,\n            tagColor: tag.color\n          };\n        });\n        setTagNameColorList(tagNameColorList);\n      }).catch(err => console.log(err));\n      axios.get(api_links.API_ROOT + \"users/\").then(res5 => {\n        let userNameList = {};\n        res5.data.map(user => userNameList[user.id] = user.name);\n        setUserNameList(userNameList);\n        let userEnrNoList = {};\n        res5.data.map(user => userEnrNoList[user.id] = user.enrollment_number);\n        setEnrNoList(userEnrNoList);\n      }).catch(err => console.log(err));\n    }).catch(err => console.log(err));\n  }, [props.match.params.enrollmentNumber]);\n\n  const getIssues = () => {\n    getDemReportedIssues(user.id, page.reported);\n    getDemAssignedIssues(user.id, page.assigned);\n  };\n\n  const handleReportedPageChange = (event, value) => {\n    page.reported != value && getDemReportedIssues(user.id, value);\n    setPage(prev => ({ ...prev,\n      reported: value\n    }));\n  };\n\n  const handleAssignedPageChange = (event, value) => {\n    page.assigned != value && getDemAssignedIssues(user.id, value);\n    setPage(prev => ({ ...prev,\n      assigned: value\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UtilityComponent, {\n    title: HEADER_NAV_TITLES.USER,\n    page: \"USER\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-card-container\",\n    style: {\n      margin: isMobile ? \"10px 5px\" : \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserCard, {\n    id: user.id,\n    name: user.name,\n    is_admin: user.is_admin,\n    enrollment_number: user.enrollment_number,\n    degree: user.degree,\n    branch: user.branch,\n    current_year: user.current_year,\n    is_active: user.is_active,\n    user: user.user,\n    display_photo: user.display_picture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  }, \"Projects: \"), projectList.length != 0 ? projectList.map(project => /*#__PURE__*/React.createElement(ProjectInfo, {\n    projectID: project.id,\n    projectslug: project.projectslug,\n    openAlert: openAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(Card, {\n    style: {\n      padding: \"15px\",\n      margin: \"15px\",\n      borderRadius: \"15px\"\n    },\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 11\n    }\n  }, \"No Projects\"), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"divider2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      textAlign: \"center\",\n      margin: \"45px 0 20px 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }\n  }, \"Issues Reported:\", \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"issues-list\" // style={{\n    //   margin: '10px',\n    //   paddingBottom: '7px'\n    // }}\n    // variant=\"outlined\"\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }\n  }, issueList.issuesReported.length != 0 ? issueList.issuesReported.map((issue, index) => /*#__PURE__*/React.createElement(IssueItem, {\n    id: issue.id,\n    issueIndex: index + 1,\n    statusText: issue.status_text,\n    statusType: issue.status_type,\n    statusColor: issue.status_color,\n    statusId: issue.status,\n    statusList: statusList,\n    date: issue.timestamp,\n    title: issue.title,\n    content: issue.description,\n    assigneeId: issue.assigned_to,\n    reporterId: issue.reporter,\n    tags: issue.tags,\n    project: issue.project,\n    projectname: issue.project_name,\n    comments: issue.comments,\n    image: issue.image[0],\n    tagNameColorList: tagNameColorList,\n    userNameList: userNameList,\n    enrNoList: enrNoList,\n    showProjectNameOnCard: true,\n    currentUser: currentUser,\n    reporterDetails: issue.reporter_details,\n    assigneeDetails: issue.assignee_details,\n    getIssues: getIssues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(Card, {\n    style: {\n      padding: \"15px\",\n      margin: \"15px\",\n      borderRadius: \"15px\"\n    },\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }\n  }, \"No Issues Reported.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pagination-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    count: totalPages.reported,\n    page: page.reported,\n    onChange: handleReportedPageChange,\n    variant: \"outlined\",\n    shape: \"rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"divider2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      textAlign: \"center\",\n      margin: \"45px 0 20px 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }\n  }, \"Issues Assigned:\", \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"issues-list\" // style={{\n    //   margin: '10px',\n    //   paddingBottom: '7px'\n    // }}\n    // variant=\"outlined\"\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }\n  }, issueList.issuesAssigned.length != 0 ? issueList.issuesAssigned.map((issue, index) => /*#__PURE__*/React.createElement(IssueItem, {\n    id: issue.id,\n    issueIndex: index + 1,\n    statusText: issue.status_text,\n    statusType: issue.status_type,\n    statusColor: issue.status_color,\n    statusId: issue.status,\n    statusList: statusList,\n    date: issue.timestamp,\n    title: issue.title,\n    content: issue.description,\n    assigneeId: issue.assigned_to,\n    reporterId: issue.reporter,\n    tags: issue.tags,\n    project: issue.project,\n    projectname: issue.project_name,\n    comments: issue.comments,\n    image: issue.image[0],\n    tagNameColorList: tagNameColorList,\n    userNameList: userNameList,\n    enrNoList: enrNoList,\n    showProjectNameOnCard: true,\n    currentUser: currentUser,\n    reporterDetails: issue.reporter_details,\n    assigneeDetails: issue.assignee_details,\n    getIssues: getIssues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(Card, {\n    style: {\n      padding: \"15px\",\n      margin: \"10px\",\n      borderRadius: \"15px\"\n    },\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 13\n    }\n  }, \"No Issues Assigned.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pagination-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    count: totalPages.assigned,\n    page: page.assigned,\n    onChange: handleAssignedPageChange,\n    variant: \"outlined\",\n    shape: \"rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"divider2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AlertDialog, {\n    open: alert.open,\n    action: alert.action,\n    title: alert.title || \"\",\n    description: alert.description || \"\",\n    cancel: alert.cancel || \"\",\n    confirm: alert.confirm || \"\",\n    confirmAlert: confirmAlert,\n    data: alert.data || \"\",\n    closeAlert: closeAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/app/frontend/src/containers/UserPage.js"],"names":["React","UserCard","ProjectInfo","IssueItem","useMediaQuery","Pagination","Typography","Card","axios","api_links","AlertDialog","UtilityComponent","HEADER_NAV_TITLES","UserPage","props","isMobile","enrollmentNumber","match","params","user","setUser","useState","projectList","setProjectList","issueList","setIssueList","issuesAssigned","issuesReported","page","setPage","assigned","reported","totalPages","setTotalPages","tagNameColorList","setTagNameColorList","userNameList","setUserNameList","enrNoList","setEnrNoList","statusList","setStatusList","alert","setAlert","open","openAlert","action","title","description","cancel","confirm","data","closeAlert","prevAlertState","confirmAlert","event","choice","id","handleProjectDelete","projectID","delete","API_ROOT","then","res","audio","Audio","play","setTimeout","window","location","href","catch","err","console","log","getDemReportedIssues","userId","pageNumber","token","localStorage","getItem","config1","headers","Authorization","reporter","get","prev","results","total_pages","getDemAssignedIssues","config2","assigned_to","currentUser","setCurrentUser","fetchCurrentUserInfo","useEffect","document","getElementById","scrollTo","map","status","text","status_text","color","type","status_type","config","members","res2","res4","tag","tagText","tag_text","tagColor","res5","name","userEnrNoList","enrollment_number","getIssues","handleReportedPageChange","value","handleAssignedPageChange","USER","margin","is_admin","degree","branch","current_year","is_active","display_picture","textAlign","length","project","projectslug","padding","borderRadius","issue","index","status_color","timestamp","tags","project_name","comments","image","reporter_details","assignee_details"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport UserCard from \"../components/UserCard\";\nimport ProjectInfo from \"../components/ProjectInfo\";\nimport IssueItem from \"../components/IssueItem\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { Typography } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\n\nimport axios from \"axios\";\n\nimport * as api_links from \"../APILinks\";\nimport AlertDialog from \"../components/AlertDialog\";\nimport UtilityComponent from \"../components/UtilityComponent\";\nimport HEADER_NAV_TITLES from \"../header_nav_titles\";\n\nexport default function UserPage(props) {\n  const isMobile = useMediaQuery(\"(max-width: 700px)\");\n\n  const enrollmentNumber = props.match.params.enrollmentNumber;\n\n  const [user, setUser] = React.useState({});\n  const [projectList, setProjectList] = React.useState([]);\n  const [issueList, setIssueList] = React.useState({\n    issuesAssigned: [],\n    issuesReported: [],\n  });\n  const [page, setPage] = React.useState({\n    assigned: 1,\n    reported: 1,\n  });\n  const [totalPages, setTotalPages] = React.useState({\n    assigned: 1,\n    reported: 1,\n  });\n  const [tagNameColorList, setTagNameColorList] = React.useState([]);\n  const [userNameList, setUserNameList] = React.useState([]);\n  const [enrNoList, setEnrNoList] = React.useState([]);\n  const [statusList, setStatusList] = React.useState([]);\n  const [alert, setAlert] = React.useState({\n    open: false,\n  });\n  const openAlert = (action, title, description, cancel, confirm, data) => {\n    setAlert({\n      open: true,\n      title,\n      description,\n      cancel,\n      confirm,\n      action,\n      data,\n    });\n  };\n\n  const closeAlert = () => {\n    setAlert((prevAlertState) => ({\n      open: false,\n    }));\n  };\n\n  const confirmAlert = (event, choice, id) => {\n    switch (event) {\n      case \"delete_project\":\n        choice && handleProjectDelete(id);\n        break;\n    }\n  };\n\n  const handleProjectDelete = (projectID) => {\n    axios\n      .delete(api_links.API_ROOT + `projects/${projectID}/`)\n      .then((res) => {\n        let audio = new Audio(\n          \"../sounds/navigation_selection-complete-celebration.wav\"\n        );\n        audio.play();\n        setTimeout(() => {\n          window.location.href = \"/projects\";\n        }, 1000);\n      })\n      .catch((err) => {\n        console.log(err);\n        let audio = new Audio(\"../sounds/alert_error-03.wav\");\n        audio.play();\n      });\n  };\n\n  const getDemReportedIssues = (userId, pageNumber = 1) => {\n    const token = localStorage.getItem(\"token\");\n    let config1 = {\n      headers: { Authorization: \"Token \" + token },\n      params: {\n        page: pageNumber,\n        reporter: userId,\n      },\n    };\n    axios\n      .get(api_links.API_ROOT + \"issues/\", config1)\n      .then((res) => {\n        setIssueList((prev) => ({\n          ...prev,\n          issuesReported: res.data.results,\n        }));\n        setTotalPages((prev) => ({\n          ...prev,\n          reported: res.data.total_pages,\n        }));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const getDemAssignedIssues = (userId, pageNumber = 1) => {\n    const token = localStorage.getItem(\"token\");\n    let config2 = {\n      headers: { Authorization: \"Token \" + token },\n      params: {\n        page: pageNumber,\n        assigned_to: userId,\n      },\n    };\n    axios\n      .get(api_links.API_ROOT + \"issues/\", config2)\n      .then((res) => {\n        setIssueList((prev) => ({\n          ...prev,\n          issuesAssigned: res.data.results,\n        }));\n        setTotalPages((prev) => ({\n          ...prev,\n          assigned: res.data.total_pages,\n        }));\n      })\n      .catch((err) => console.log(err));\n  };\n  const [currentUser, setCurrentUser] = React.useState({});\n\n  async function fetchCurrentUserInfo() {\n    axios\n      .get(`${api_links.API_ROOT}current_user/`)\n      .then((res) => {\n        setCurrentUser(res.data[0]);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  React.useEffect(() => {\n    document.getElementById(\"main-main\").scrollTo(0, 0);\n    fetchCurrentUserInfo();\n\n    setAlert({\n      open: false,\n    });\n\n    axios\n      .get(api_links.API_ROOT + \"issuestatus/\")\n      .then((res) => {\n        setStatusList(\n          res.data.map((status) => ({\n            text: status.status_text,\n            color: status.color,\n            type: status.status_type,\n            id: status.id,\n          }))\n        );\n      })\n      .catch((err) => console.log(err));\n\n    axios\n      .get(api_links.API_ROOT + `userByEnrNo/${enrollmentNumber}/`)\n      .then((res) => {\n        setUser(res.data);\n        getDemReportedIssues(res.data.id);\n        getDemAssignedIssues(res.data.id);\n\n        const token = localStorage.getItem(\"token\");\n        let config = {\n          headers: { Authorization: \"Token \" + token },\n          params: {\n            members: res.data.id,\n          },\n        };\n        axios\n          .get(api_links.API_ROOT + \"projects/\", config)\n          .then((res2) => {\n            setProjectList(res2.data);\n          })\n          .catch((err) => console.log(err));\n\n        axios\n          .get(api_links.API_ROOT + \"tags/\")\n          .then((res4) => {\n            let tagNameColorList = {};\n            res4.data.map((tag) => {\n              tagNameColorList[tag.id] = {\n                tagText: tag.tag_text,\n                tagColor: tag.color,\n              };\n            });\n            setTagNameColorList(tagNameColorList);\n          })\n          .catch((err) => console.log(err));\n\n        axios\n          .get(api_links.API_ROOT + \"users/\")\n          .then((res5) => {\n            let userNameList = {};\n            res5.data.map((user) => (userNameList[user.id] = user.name));\n            setUserNameList(userNameList);\n            let userEnrNoList = {};\n            res5.data.map(\n              (user) => (userEnrNoList[user.id] = user.enrollment_number)\n            );\n            setEnrNoList(userEnrNoList);\n          })\n          .catch((err) => console.log(err));\n      })\n      .catch((err) => console.log(err));\n  }, [props.match.params.enrollmentNumber]);\n\n  const getIssues = () => {\n    getDemReportedIssues(user.id, page.reported);\n    getDemAssignedIssues(user.id, page.assigned);\n  };\n\n  const handleReportedPageChange = (event, value) => {\n    page.reported != value && getDemReportedIssues(user.id, value);\n    setPage((prev) => ({\n      ...prev,\n      reported: value,\n    }));\n  };\n\n  const handleAssignedPageChange = (event, value) => {\n    page.assigned != value && getDemAssignedIssues(user.id, value);\n    setPage((prev) => ({\n      ...prev,\n      assigned: value,\n    }));\n  };\n\n  return (\n    <>\n      <UtilityComponent title={HEADER_NAV_TITLES.USER} page=\"USER\" />\n\n      <div\n        className=\"user-card-container\"\n        style={{\n          margin: isMobile ? \"10px 5px\" : \"15px\",\n        }}\n      >\n        <UserCard\n          id={user.id}\n          name={user.name}\n          is_admin={user.is_admin}\n          enrollment_number={user.enrollment_number}\n          degree={user.degree}\n          branch={user.branch}\n          current_year={user.current_year}\n          is_active={user.is_active}\n          user={user.user}\n          display_photo={user.display_picture}\n        />\n      </div>\n\n      <Typography style={{ textAlign: \"center\" }}>Projects: </Typography>\n      {projectList.length != 0 ? (\n        projectList.map((project) => (\n          <ProjectInfo\n            projectID={project.id}\n            projectslug={project.projectslug}\n            openAlert={openAlert}\n          />\n        ))\n      ) : (\n          <Card\n            style={{\n              padding: \"15px\",\n              margin: \"15px\",\n              borderRadius: \"15px\",\n            }}\n            variant=\"outlined\"\n          >\n            No Projects\n          </Card>\n        )}\n\n      <hr className=\"divider2\" />\n\n      <Typography style={{ textAlign: \"center\", margin: \"45px 0 20px 0\" }}>\n        Issues Reported:{\" \"}\n      </Typography>\n\n      <div\n        className=\"issues-list\"\n      // style={{\n      //   margin: '10px',\n      //   paddingBottom: '7px'\n      // }}\n      // variant=\"outlined\"\n      >\n        {issueList.issuesReported.length != 0 ? (\n          issueList.issuesReported.map((issue, index) => (\n            <IssueItem\n              id={issue.id}\n              issueIndex={index + 1}\n              statusText={issue.status_text}\n              statusType={issue.status_type}\n              statusColor={issue.status_color}\n              statusId={issue.status}\n              statusList={statusList}\n              date={issue.timestamp}\n              title={issue.title}\n              content={issue.description}\n              assigneeId={issue.assigned_to}\n              reporterId={issue.reporter}\n              tags={issue.tags}\n              project={issue.project}\n              projectname={issue.project_name}\n              comments={issue.comments}\n              image={issue.image[0]}\n              tagNameColorList={tagNameColorList}\n              userNameList={userNameList}\n              enrNoList={enrNoList}\n              showProjectNameOnCard\n              currentUser={currentUser}\n              reporterDetails={issue.reporter_details}\n              assigneeDetails={issue.assignee_details}\n              getIssues={getIssues}\n            />\n          ))\n        ) : (\n            <Card\n              style={{\n                padding: \"15px\",\n                margin: \"15px\",\n                borderRadius: \"15px\",\n              }}\n              variant=\"outlined\"\n            >\n              No Issues Reported.\n            </Card>\n          )}\n      </div>\n\n      <div className=\"pagination-container\">\n        <Pagination\n          count={totalPages.reported}\n          page={page.reported}\n          onChange={handleReportedPageChange}\n          variant=\"outlined\"\n          shape=\"rounded\"\n        />\n      </div>\n\n      <hr className=\"divider2\" />\n\n      <Typography style={{ textAlign: \"center\", margin: \"45px 0 20px 0\" }}>\n        Issues Assigned:{\" \"}\n      </Typography>\n\n      <div\n        className=\"issues-list\"\n      // style={{\n      //   margin: '10px',\n      //   paddingBottom: '7px'\n      // }}\n      // variant=\"outlined\"\n      >\n        {issueList.issuesAssigned.length != 0 ? (\n          issueList.issuesAssigned.map((issue, index) => (\n            <IssueItem\n              id={issue.id}\n              issueIndex={index + 1}\n              statusText={issue.status_text}\n              statusType={issue.status_type}\n              statusColor={issue.status_color}\n              statusId={issue.status}\n              statusList={statusList}\n              date={issue.timestamp}\n              title={issue.title}\n              content={issue.description}\n              assigneeId={issue.assigned_to}\n              reporterId={issue.reporter}\n              tags={issue.tags}\n              project={issue.project}\n              projectname={issue.project_name}\n              comments={issue.comments}\n              image={issue.image[0]}\n              tagNameColorList={tagNameColorList}\n              userNameList={userNameList}\n              enrNoList={enrNoList}\n              showProjectNameOnCard\n              currentUser={currentUser}\n              reporterDetails={issue.reporter_details}\n              assigneeDetails={issue.assignee_details}\n              getIssues={getIssues}\n            />\n          ))\n        ) : (\n            <Card\n              style={{\n                padding: \"15px\",\n                margin: \"10px\",\n                borderRadius: \"15px\",\n              }}\n              variant=\"outlined\"\n            >\n              No Issues Assigned.\n            </Card>\n          )}\n      </div>\n      <div className=\"pagination-container\">\n        <Pagination\n          count={totalPages.assigned}\n          page={page.assigned}\n          onChange={handleAssignedPageChange}\n          variant=\"outlined\"\n          shape=\"rounded\"\n        />\n      </div>\n\n      <hr className=\"divider2\" />\n\n      <br />\n\n      <AlertDialog\n        open={alert.open}\n        action={alert.action}\n        title={alert.title || \"\"}\n        description={alert.description || \"\"}\n        cancel={alert.cancel || \"\"}\n        confirm={alert.confirm || \"\"}\n        confirmAlert={confirmAlert}\n        data={alert.data || \"\"}\n        closeAlert={closeAlert}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}