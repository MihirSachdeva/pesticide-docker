{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/containers/Admin.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport * as api_links from \"../APILinks\";\nimport FormDialog from \"../components/FormDialog\";\nimport UserCard from \"../components/UserCard\";\nimport AlertDialog from \"../components/AlertDialog\";\nimport UtilityComponent from \"../components/UtilityComponent\";\nimport TitleCard from \"../components/TitleCard\";\nimport HEADER_NAV_TITLES from \"../header_nav_titles\";\nimport axios from \"axios\";\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), value === index && /*#__PURE__*/React.createElement(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, children))));\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n}\n\nconst Admin = props => {\n  const [tags, setTags] = React.useState([]);\n  const [statuses, setStatuses] = React.useState([]);\n  const [formDialog, setFormDialog] = React.useState({\n    open: false\n  });\n  const [users, setUsers] = React.useState([]);\n  const [alert, setAlert] = React.useState({\n    open: false\n  });\n\n  async function fetchTags() {\n    axios.get(api_links.API_ROOT + \"tags/\").then(res => {\n      setTags(res.data);\n    }).catch(err => console.log(err));\n  }\n\n  async function fetchStatuses() {\n    axios.get(api_links.API_ROOT + \"issuestatus/\").then(res => {\n      setStatuses(res.data);\n    }).catch(err => console.log(err));\n  }\n\n  async function fetchUsers() {\n    axios.get(api_links.API_ROOT + \"users/\").then(res => {\n      setUsers(res.data);\n    }).catch(err => console.log(err));\n  }\n\n  React.useEffect(() => {\n    fetchTags();\n    fetchStatuses();\n    setFormDialog({\n      open: false\n    });\n    fetchUsers();\n  }, []);\n\n  const openFormDialog = (action, title, description, cancel, confirm, data, fields, showColorSwatches, colorSwatchesType) => {\n    setFormDialog({\n      open: true,\n      title,\n      description,\n      cancel,\n      confirm,\n      action,\n      data,\n      fields,\n      showColorSwatches,\n      colorSwatchesType\n    });\n  };\n\n  const closeFormDialog = () => {\n    setFormDialog(() => ({\n      open: false\n    }));\n  };\n\n  const confirmFormDialog = (action, choice, data, fields) => {\n    switch (action) {\n      case \"edit_tag\":\n        choice && editTag(data, fields);\n        break;\n\n      case \"add_tag\":\n        choice && addTag(fields);\n        break;\n\n      case \"edit_status\":\n        choice && editStatus(data, fields);\n        break;\n\n      case \"add_status\":\n        choice && addStatus(fields);\n        break;\n    }\n  };\n\n  const editTag = (data, fields) => {\n    let id = data.id;\n    let tag_text_index = fields.findIndex(field => field.name == \"tag_text\");\n    let color_index = fields.findIndex(field => field.name == \"color\");\n    let tag_text = fields[tag_text_index].value;\n    let color = fields[color_index].value;\n    let tag = {\n      tag_text: tag_text,\n      color: color\n    };\n    console.log(tag);\n    axios.patch(api_links.API_ROOT + `tags/${id}/`, tag).then(res => {\n      fetchTags();\n      console.log(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const editStatus = (data, fields) => {\n    let id = data.id;\n    let status_text_index = fields.findIndex(field => field.name == \"status_text\");\n    let color_index = fields.findIndex(field => field.name == \"color\");\n    let status_text = fields[status_text_index].value;\n    let color = fields[color_index].value;\n    let status = {\n      status_text: status_text,\n      color: color\n    };\n    console.log(status);\n    axios.patch(api_links.API_ROOT + `issuestatus/${id}/`, status).then(res => {\n      fetchStatuses();\n      console.log(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const addTag = fields => {\n    let tag_text_index = fields.findIndex(field => field.name == \"tag_text\");\n    let color_index = fields.findIndex(field => field.name == \"color\");\n    let tag_text = fields[tag_text_index].value;\n    let color = fields[color_index].value;\n    let tag = {\n      tag_text: tag_text,\n      color: color\n    };\n    console.log(tag);\n    axios.post(api_links.API_ROOT + \"tags/\", tag).then(res => {\n      fetchTags();\n      console.log(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const addStatus = fields => {\n    let status_text_index = fields.findIndex(field => field.name == \"status_text\");\n    let color_index = fields.findIndex(field => field.name == \"color\");\n    let status_text = fields[status_text_index].value;\n    let color = fields[color_index].value;\n    let status = {\n      status_text: status_text,\n      color: color\n    };\n    console.log(status);\n    axios.post(api_links.API_ROOT + \"issuestatus/\", status).then(res => {\n      fetchStatuses();\n      console.log(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const openAlert = (action, title, description, cancel, confirm, data) => {\n    setAlert({\n      open: true,\n      title,\n      description,\n      cancel,\n      confirm,\n      action,\n      data\n    });\n  };\n\n  const closeAlert = () => {\n    setAlert(prevAlertState => ({\n      open: false\n    }));\n  };\n\n  const handleUserUpdate = (id, field, bool) => {\n    let data = {\n      [field]: bool\n    };\n    axios.patch(api_links.API_ROOT + `user_status/${id}/`, data).then(res => {\n      console.log(res);\n      fetchUsers();\n    }).catch(err => console.log(err));\n  };\n\n  const confirmAlert = (action, choice, data) => {\n    choice && handleUserUpdate(data.id, data.field, data.bool);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UtilityComponent, {\n    onlyAdmins: true,\n    title: HEADER_NAV_TITLES.ADMIN,\n    page: \"ADMIN\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TitleCard, {\n    title: \"Admin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(AppBar, {\n    position: \"sticky\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: value,\n    onChange: handleChange,\n    \"aria-label\": \"simple tabs example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tab, Object.assign({\n    style: {\n      textTransform: \"none\"\n    },\n    label: \"Issue Tags\"\n  }, a11yProps(0), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n    style: {\n      textTransform: \"none\"\n    },\n    label: \"Issue Status\"\n  }, a11yProps(1), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n    style: {\n      textTransform: \"none\"\n    },\n    label: props.theme == \"palpatine\" ? \"Jedi\" : \"Users\"\n  }, a11yProps(2), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"centet\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      textTransform: \"none\",\n      fontWeight: \"900\",\n      fontSize: \"20px\",\n      width: \"fit-content\",\n      padding: \"5ps 10px\",\n      margin: \"20px\"\n    },\n    className: \"project-issue-tag issue-button-filled\",\n    onClick: () => {\n      openFormDialog(\"add_tag\", \"Create a new Tag\", \"Tag text has to be unique, color can be any valid CSS color.\", \"Cancel\", \"Save\", {}, [{\n        title: \"Tag\",\n        name: \"tag_text\",\n        value: \" \"\n      }, {\n        title: \"Tag color\",\n        name: \"color\",\n        value: \" \"\n      }], true, \"tag_colors\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 17\n    }\n  }, \"+ Create a new Tag\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-tags-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 15\n    }\n  }, tags != [] && tags.map(tag => /*#__PURE__*/React.createElement(Button, {\n    style: {\n      color: tag.color,\n      textTransform: \"none\",\n      fontWeight: \"900\",\n      fontSize: \"17px\",\n      width: \"fit-content\",\n      margin: \"10px auto\"\n    },\n    className: \"project-issue-tag issue-button-filled\",\n    onClick: () => {\n      openFormDialog(\"edit_tag\", `Edit ${tag.tag_text} Tag`, \"You can change the tag text and color. Color can be any valid CSS color.\", \"Cancel\", \"Save\", {\n        id: tag.id\n      }, [{\n        title: \"Tag\",\n        name: \"tag_text\",\n        value: tag.tag_text\n      }, {\n        title: \"Tag color\",\n        name: \"color\",\n        value: tag.color\n      }], true, \"tag_colors\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 21\n    }\n  }, tag.tag_text)))))), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"centet\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      textTransform: \"none\",\n      fontWeight: \"900\",\n      fontSize: \"20px\",\n      width: \"fit-content\",\n      padding: \"5ps 10px\",\n      margin: \"20px\"\n    },\n    className: \"project-issue-tag issue-button-filled\",\n    onClick: () => {\n      openFormDialog(\"add_status\", \"Create a New Issue Status\", \"Status text has to be unique, color can be any valid CSS color.\", \"Cancel\", \"Save\", {}, [{\n        title: \"Status\",\n        name: \"status_text\",\n        value: \" \"\n      }, {\n        title: \"Status color\",\n        name: \"color\",\n        value: \" \"\n      }], true, \"issue_status_colors\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 17\n    }\n  }, \"+ Create a new Status\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-tags-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 15\n    }\n  }, statuses != [] && statuses.map((status, index) => /*#__PURE__*/React.createElement(Button, {\n    style: {\n      color: status.color,\n      textTransform: \"none\",\n      fontWeight: \"900\",\n      fontSize: \"17px\",\n      width: \"fit-content\",\n      margin: \"10px auto\"\n    },\n    className: \"project-issue-tag issue-button-filled\",\n    onClick: () => {\n      openFormDialog(\"edit_status\", `Edit ${status.status_text} status`, \"You can change the status text and color. Status text has to be unique, color can be any valid CSS color.\", \"Cancel\", \"Save\", {\n        id: status.id\n      }, [{\n        title: \"Status\",\n        name: \"status_text\",\n        value: status.status_text\n      }, {\n        title: \"Status color\",\n        name: \"color\",\n        value: status.color\n      }], true, \"issue_status_colors\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 21\n    }\n  }, status.status_text)))))), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-card-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-card-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 13\n    }\n  }, users.map(user => /*#__PURE__*/React.createElement(UserCard, {\n    id: user.id,\n    name: user.name,\n    is_admin: user.is_admin,\n    enrollment_number: user.enrollment_number,\n    degree: user.degree,\n    branch: user.branch,\n    current_year: user.current_year,\n    is_active: user.is_active,\n    user: user.user,\n    display_photo: user.display_picture,\n    isActive: user.is_active,\n    isAdmin: user.is_master,\n    fromAdminPage: true,\n    openAlert: openAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(FormDialog, {\n    open: formDialog.open,\n    title: formDialog.title,\n    description: formDialog.description,\n    cancel: formDialog.cancel,\n    confirm: formDialog.confirm,\n    action: formDialog.action,\n    data: formDialog.data,\n    closeFormDialog: closeFormDialog,\n    confirmFormDialog: confirmFormDialog,\n    fields: formDialog.fields,\n    showColorSwatches: formDialog.showColorSwatches,\n    colorSwatchesType: formDialog.colorSwatchesType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(AlertDialog, {\n    open: alert.open,\n    action: alert.action,\n    title: alert.title || \"\",\n    description: alert.description || \"\",\n    cancel: alert.cancel || \"\",\n    confirm: alert.confirm || \"\",\n    confirmAlert: confirmAlert,\n    data: alert.data || {},\n    closeAlert: closeAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    theme: state.theme.theme\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, null)(Admin));","map":{"version":3,"sources":["/app/frontend/src/containers/Admin.js"],"names":["React","PropTypes","AppBar","Tabs","Tab","Typography","Box","Button","connect","withRouter","api_links","FormDialog","UserCard","AlertDialog","UtilityComponent","TitleCard","HEADER_NAV_TITLES","axios","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","a11yProps","id","Admin","tags","setTags","useState","statuses","setStatuses","formDialog","setFormDialog","open","users","setUsers","alert","setAlert","fetchTags","get","API_ROOT","then","res","data","catch","err","console","log","fetchStatuses","fetchUsers","useEffect","openFormDialog","action","title","description","cancel","confirm","fields","showColorSwatches","colorSwatchesType","closeFormDialog","confirmFormDialog","choice","editTag","addTag","editStatus","addStatus","tag_text_index","findIndex","field","name","color_index","tag_text","color","tag","patch","status_text_index","status_text","status","post","setValue","handleChange","event","newValue","openAlert","closeAlert","prevAlertState","handleUserUpdate","bool","confirmAlert","ADMIN","textTransform","theme","margin","display","alignItems","justifyContent","fontWeight","fontSize","width","padding","map","user","is_admin","enrollment_number","degree","branch","current_year","is_active","display_picture","is_master","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAO,KAAKC,SAAZ,MAA2B,aAA3B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,KAAnB;AAA0B,OAAGC;AAA7B,MAAuCJ,KAA7C;AAEA,sBACE,uDACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,MAAM,EAAEE,KAAK,KAAKC,KAFpB;AAGE,IAAA,EAAE,EAAG,mBAAkBA,KAAM,EAH/B;AAIE,uBAAkB,cAAaA,KAAM;AAJvC,KAKMC,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOGF,KAAK,KAAKC,KAAV,iBACC,oBAAC,GAAD;AAAK,IAAA,CAAC,EAAE,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaF,QAAb,CADF,CARJ,CADF,CADF;AAiBD;;AAEDF,QAAQ,CAACM,SAAT,GAAqB;AACnBJ,EAAAA,QAAQ,EAAEnB,SAAS,CAACwB,IADD;AAEnBH,EAAAA,KAAK,EAAErB,SAAS,CAACyB,GAAV,CAAcC,UAFF;AAGnBN,EAAAA,KAAK,EAAEpB,SAAS,CAACyB,GAAV,CAAcC;AAHF,CAArB;;AAMA,SAASC,SAAT,CAAmBN,KAAnB,EAA0B;AACxB,SAAO;AACLO,IAAAA,EAAE,EAAG,cAAaP,KAAM,EADnB;AAEL,qBAAkB,mBAAkBA,KAAM;AAFrC,GAAP;AAID;;AAED,MAAMQ,KAAK,GAAIX,KAAD,IAAW;AACvB,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBhC,KAAK,CAACiC,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BnC,KAAK,CAACiC,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BrC,KAAK,CAACiC,QAAN,CAAe;AACjDK,IAAAA,IAAI,EAAE;AAD2C,GAAf,CAApC;AAGA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBxC,KAAK,CAACiC,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoB1C,KAAK,CAACiC,QAAN,CAAe;AACvCK,IAAAA,IAAI,EAAE;AADiC,GAAf,CAA1B;;AAIA,iBAAeK,SAAf,GAA2B;AACzB1B,IAAAA,KAAK,CACF2B,GADH,CACOlC,SAAS,CAACmC,QAAV,GAAqB,OAD5B,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbf,MAAAA,OAAO,CAACe,GAAG,CAACC,IAAL,CAAP;AACD,KAJH,EAKGC,KALH,CAKUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALlB;AAMD;;AAED,iBAAeG,aAAf,GAA+B;AAC7BpC,IAAAA,KAAK,CACF2B,GADH,CACOlC,SAAS,CAACmC,QAAV,GAAqB,cAD5B,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbZ,MAAAA,WAAW,CAACY,GAAG,CAACC,IAAL,CAAX;AACD,KAJH,EAKGC,KALH,CAKUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALlB;AAMD;;AAED,iBAAeI,UAAf,GAA4B;AAC1BrC,IAAAA,KAAK,CACF2B,GADH,CACOlC,SAAS,CAACmC,QAAV,GAAqB,QAD5B,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbP,MAAAA,QAAQ,CAACO,GAAG,CAACC,IAAL,CAAR;AACD,KAJH,EAKGC,KALH,CAKUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALlB;AAMD;;AAEDlD,EAAAA,KAAK,CAACuD,SAAN,CAAgB,MAAM;AACpBZ,IAAAA,SAAS;AACTU,IAAAA,aAAa;AACbhB,IAAAA,aAAa,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAb;AACAgB,IAAAA,UAAU;AACX,GALD,EAKG,EALH;;AAOA,QAAME,cAAc,GAAG,CACrBC,MADqB,EAErBC,KAFqB,EAGrBC,WAHqB,EAIrBC,MAJqB,EAKrBC,OALqB,EAMrBb,IANqB,EAOrBc,MAPqB,EAQrBC,iBARqB,EASrBC,iBATqB,KAUlB;AACH3B,IAAAA,aAAa,CAAC;AACZC,MAAAA,IAAI,EAAE,IADM;AAEZoB,MAAAA,KAFY;AAGZC,MAAAA,WAHY;AAIZC,MAAAA,MAJY;AAKZC,MAAAA,OALY;AAMZJ,MAAAA,MANY;AAOZT,MAAAA,IAPY;AAQZc,MAAAA,MARY;AASZC,MAAAA,iBATY;AAUZC,MAAAA;AAVY,KAAD,CAAb;AAYD,GAvBD;;AAyBA,QAAMC,eAAe,GAAG,MAAM;AAC5B5B,IAAAA,aAAa,CAAC,OAAO;AACnBC,MAAAA,IAAI,EAAE;AADa,KAAP,CAAD,CAAb;AAGD,GAJD;;AAMA,QAAM4B,iBAAiB,GAAG,CAACT,MAAD,EAASU,MAAT,EAAiBnB,IAAjB,EAAuBc,MAAvB,KAAkC;AAC1D,YAAQL,MAAR;AACE,WAAK,UAAL;AACEU,QAAAA,MAAM,IAAIC,OAAO,CAACpB,IAAD,EAAOc,MAAP,CAAjB;AACA;;AACF,WAAK,SAAL;AACEK,QAAAA,MAAM,IAAIE,MAAM,CAACP,MAAD,CAAhB;AACA;;AACF,WAAK,aAAL;AACEK,QAAAA,MAAM,IAAIG,UAAU,CAACtB,IAAD,EAAOc,MAAP,CAApB;AACA;;AACF,WAAK,YAAL;AACEK,QAAAA,MAAM,IAAII,SAAS,CAACT,MAAD,CAAnB;AACA;AAZJ;AAcD,GAfD;;AAiBA,QAAMM,OAAO,GAAG,CAACpB,IAAD,EAAOc,MAAP,KAAkB;AAChC,QAAIjC,EAAE,GAAGmB,IAAI,CAACnB,EAAd;AACA,QAAI2C,cAAc,GAAGV,MAAM,CAACW,SAAP,CAAkBC,KAAD,IAAWA,KAAK,CAACC,IAAN,IAAc,UAA1C,CAArB;AACA,QAAIC,WAAW,GAAGd,MAAM,CAACW,SAAP,CAAkBC,KAAD,IAAWA,KAAK,CAACC,IAAN,IAAc,OAA1C,CAAlB;AACA,QAAIE,QAAQ,GAAGf,MAAM,CAACU,cAAD,CAAN,CAAuBnD,KAAtC;AACA,QAAIyD,KAAK,GAAGhB,MAAM,CAACc,WAAD,CAAN,CAAoBvD,KAAhC;AACA,QAAI0D,GAAG,GAAG;AACRF,MAAAA,QAAQ,EAAEA,QADF;AAERC,MAAAA,KAAK,EAAEA;AAFC,KAAV;AAIA3B,IAAAA,OAAO,CAACC,GAAR,CAAY2B,GAAZ;AACA9D,IAAAA,KAAK,CACF+D,KADH,CACStE,SAAS,CAACmC,QAAV,GAAsB,QAAOhB,EAAG,GADzC,EAC6CkD,GAD7C,EAEGjC,IAFH,CAESC,GAAD,IAAS;AACbJ,MAAAA,SAAS;AACTQ,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACC,IAAhB;AACD,KALH,EAMGC,KANH,CAMUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANlB;AAOD,GAlBD;;AAoBA,QAAMoB,UAAU,GAAG,CAACtB,IAAD,EAAOc,MAAP,KAAkB;AACnC,QAAIjC,EAAE,GAAGmB,IAAI,CAACnB,EAAd;AACA,QAAIoD,iBAAiB,GAAGnB,MAAM,CAACW,SAAP,CACrBC,KAAD,IAAWA,KAAK,CAACC,IAAN,IAAc,aADH,CAAxB;AAGA,QAAIC,WAAW,GAAGd,MAAM,CAACW,SAAP,CAAkBC,KAAD,IAAWA,KAAK,CAACC,IAAN,IAAc,OAA1C,CAAlB;AACA,QAAIO,WAAW,GAAGpB,MAAM,CAACmB,iBAAD,CAAN,CAA0B5D,KAA5C;AACA,QAAIyD,KAAK,GAAGhB,MAAM,CAACc,WAAD,CAAN,CAAoBvD,KAAhC;AACA,QAAI8D,MAAM,GAAG;AACXD,MAAAA,WAAW,EAAEA,WADF;AAEXJ,MAAAA,KAAK,EAAEA;AAFI,KAAb;AAIA3B,IAAAA,OAAO,CAACC,GAAR,CAAY+B,MAAZ;AACAlE,IAAAA,KAAK,CACF+D,KADH,CACStE,SAAS,CAACmC,QAAV,GAAsB,eAAchB,EAAG,GADhD,EACoDsD,MADpD,EAEGrC,IAFH,CAESC,GAAD,IAAS;AACbM,MAAAA,aAAa;AACbF,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACC,IAAhB;AACD,KALH,EAMGC,KANH,CAMUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANlB;AAOD,GApBD;;AAsBA,QAAMmB,MAAM,GAAIP,MAAD,IAAY;AACzB,QAAIU,cAAc,GAAGV,MAAM,CAACW,SAAP,CAAkBC,KAAD,IAAWA,KAAK,CAACC,IAAN,IAAc,UAA1C,CAArB;AACA,QAAIC,WAAW,GAAGd,MAAM,CAACW,SAAP,CAAkBC,KAAD,IAAWA,KAAK,CAACC,IAAN,IAAc,OAA1C,CAAlB;AACA,QAAIE,QAAQ,GAAGf,MAAM,CAACU,cAAD,CAAN,CAAuBnD,KAAtC;AACA,QAAIyD,KAAK,GAAGhB,MAAM,CAACc,WAAD,CAAN,CAAoBvD,KAAhC;AACA,QAAI0D,GAAG,GAAG;AACRF,MAAAA,QAAQ,EAAEA,QADF;AAERC,MAAAA,KAAK,EAAEA;AAFC,KAAV;AAIA3B,IAAAA,OAAO,CAACC,GAAR,CAAY2B,GAAZ;AACA9D,IAAAA,KAAK,CACFmE,IADH,CACQ1E,SAAS,CAACmC,QAAV,GAAqB,OAD7B,EACsCkC,GADtC,EAEGjC,IAFH,CAESC,GAAD,IAAS;AACbJ,MAAAA,SAAS;AACTQ,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACC,IAAhB;AACD,KALH,EAMGC,KANH,CAMUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANlB;AAOD,GAjBD;;AAmBA,QAAMqB,SAAS,GAAIT,MAAD,IAAY;AAC5B,QAAImB,iBAAiB,GAAGnB,MAAM,CAACW,SAAP,CACrBC,KAAD,IAAWA,KAAK,CAACC,IAAN,IAAc,aADH,CAAxB;AAGA,QAAIC,WAAW,GAAGd,MAAM,CAACW,SAAP,CAAkBC,KAAD,IAAWA,KAAK,CAACC,IAAN,IAAc,OAA1C,CAAlB;AACA,QAAIO,WAAW,GAAGpB,MAAM,CAACmB,iBAAD,CAAN,CAA0B5D,KAA5C;AACA,QAAIyD,KAAK,GAAGhB,MAAM,CAACc,WAAD,CAAN,CAAoBvD,KAAhC;AACA,QAAI8D,MAAM,GAAG;AACXD,MAAAA,WAAW,EAAEA,WADF;AAEXJ,MAAAA,KAAK,EAAEA;AAFI,KAAb;AAIA3B,IAAAA,OAAO,CAACC,GAAR,CAAY+B,MAAZ;AACAlE,IAAAA,KAAK,CACFmE,IADH,CACQ1E,SAAS,CAACmC,QAAV,GAAqB,cAD7B,EAC6CsC,MAD7C,EAEGrC,IAFH,CAESC,GAAD,IAAS;AACbM,MAAAA,aAAa;AACbF,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACC,IAAhB;AACD,KALH,EAMGC,KANH,CAMUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANlB;AAOD,GAnBD;;AAqBA,QAAM,CAAC7B,KAAD,EAAQgE,QAAR,IAAoBrF,KAAK,CAACiC,QAAN,CAAe,CAAf,CAA1B;;AACA,QAAMqD,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxCH,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAG,CAAChC,MAAD,EAASC,KAAT,EAAgBC,WAAhB,EAA6BC,MAA7B,EAAqCC,OAArC,EAA8Cb,IAA9C,KAAuD;AACvEN,IAAAA,QAAQ,CAAC;AACPJ,MAAAA,IAAI,EAAE,IADC;AAEPoB,MAAAA,KAFO;AAGPC,MAAAA,WAHO;AAIPC,MAAAA,MAJO;AAKPC,MAAAA,OALO;AAMPJ,MAAAA,MANO;AAOPT,MAAAA;AAPO,KAAD,CAAR;AASD,GAVD;;AAYA,QAAM0C,UAAU,GAAG,MAAM;AACvBhD,IAAAA,QAAQ,CAAEiD,cAAD,KAAqB;AAC5BrD,MAAAA,IAAI,EAAE;AADsB,KAArB,CAAD,CAAR;AAGD,GAJD;;AAMA,QAAMsD,gBAAgB,GAAG,CAAC/D,EAAD,EAAK6C,KAAL,EAAYmB,IAAZ,KAAqB;AAC5C,QAAI7C,IAAI,GAAG;AACT,OAAC0B,KAAD,GAASmB;AADA,KAAX;AAGA5E,IAAAA,KAAK,CACF+D,KADH,CACStE,SAAS,CAACmC,QAAV,GAAsB,eAAchB,EAAG,GADhD,EACoDmB,IADpD,EAEGF,IAFH,CAESC,GAAD,IAAS;AACbI,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACAO,MAAAA,UAAU;AACX,KALH,EAMGL,KANH,CAMUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANlB;AAOD,GAXD;;AAaA,QAAM4C,YAAY,GAAG,CAACrC,MAAD,EAASU,MAAT,EAAiBnB,IAAjB,KAA0B;AAC7CmB,IAAAA,MAAM,IAAIyB,gBAAgB,CAAC5C,IAAI,CAACnB,EAAN,EAAUmB,IAAI,CAAC0B,KAAf,EAAsB1B,IAAI,CAAC6C,IAA3B,CAA1B;AACD,GAFD;;AAIA,sBACE,uDACE,oBAAC,gBAAD;AAAkB,IAAA,UAAU,MAA5B;AAA6B,IAAA,KAAK,EAAE7E,iBAAiB,CAAC+E,KAAtD;AAA6D,IAAA,IAAI,EAAC,OAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE1E,KADT;AAEE,IAAA,QAAQ,EAAEiE,YAFZ;AAGE,kBAAW,qBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,GAAD;AACE,IAAA,KAAK,EAAE;AAAEU,MAAAA,aAAa,EAAE;AAAjB,KADT;AAEE,IAAA,KAAK,EAAC;AAFR,KAGMpE,SAAS,CAAC,CAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALF,eAUE,oBAAC,GAAD;AACE,IAAA,KAAK,EAAE;AAAEoE,MAAAA,aAAa,EAAE;AAAjB,KADT;AAEE,IAAA,KAAK,EAAC;AAFR,KAGMpE,SAAS,CAAC,CAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVF,eAeE,oBAAC,GAAD;AACE,IAAA,KAAK,EAAE;AAAEoE,MAAAA,aAAa,EAAE;AAAjB,KADT;AAEE,IAAA,KAAK,EAAE7E,KAAK,CAAC8E,KAAN,IAAe,WAAf,GAA6B,MAA7B,GAAsC;AAF/C,KAGMrE,SAAS,CAAC,CAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAfF,CADF,CAHF,eA0BE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEP,KAAjB;AAAwB,IAAA,KAAK,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,uDACE;AAAK,IAAA,KAAK,EAAE;AAAE6E,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,UAAU,EAAE,QAFP;AAGLC,MAAAA,cAAc,EAAE;AAHX,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE;AACLL,MAAAA,aAAa,EAAE,MADV;AAELM,MAAAA,UAAU,EAAE,KAFP;AAGLC,MAAAA,QAAQ,EAAE,MAHL;AAILC,MAAAA,KAAK,EAAE,aAJF;AAKLC,MAAAA,OAAO,EAAE,UALJ;AAMLP,MAAAA,MAAM,EAAE;AANH,KADT;AASE,IAAA,SAAS,EAAC,uCATZ;AAUE,IAAA,OAAO,EAAE,MAAM;AACb1C,MAAAA,cAAc,CACZ,SADY,EAEZ,kBAFY,EAGZ,8DAHY,EAIZ,QAJY,EAKZ,MALY,EAMZ,EANY,EAOZ,CACE;AACEE,QAAAA,KAAK,EAAE,KADT;AAEEiB,QAAAA,IAAI,EAAE,UAFR;AAGEtD,QAAAA,KAAK,EAAE;AAHT,OADF,EAME;AACEqC,QAAAA,KAAK,EAAE,WADT;AAEEiB,QAAAA,IAAI,EAAE,OAFR;AAGEtD,QAAAA,KAAK,EAAE;AAHT,OANF,CAPY,EAmBZ,IAnBY,EAoBZ,YApBY,CAAd;AAsBD,KAjCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPF,CADF,eA8CE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGU,IAAI,IAAI,EAAR,IACCA,IAAI,CAAC2E,GAAL,CAAU3B,GAAD,iBACP,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,KAAK,EAAEC,GAAG,CAACD,KADN;AAELkB,MAAAA,aAAa,EAAE,MAFV;AAGLM,MAAAA,UAAU,EAAE,KAHP;AAILC,MAAAA,QAAQ,EAAE,MAJL;AAKLC,MAAAA,KAAK,EAAE,aALF;AAMLN,MAAAA,MAAM,EAAE;AANH,KADT;AASE,IAAA,SAAS,EAAC,uCATZ;AAUE,IAAA,OAAO,EAAE,MAAM;AACb1C,MAAAA,cAAc,CACZ,UADY,EAEX,QAAOuB,GAAG,CAACF,QAAS,MAFT,EAGZ,0EAHY,EAIZ,QAJY,EAKZ,MALY,EAMZ;AACEhD,QAAAA,EAAE,EAAEkD,GAAG,CAAClD;AADV,OANY,EASZ,CACE;AACE6B,QAAAA,KAAK,EAAE,KADT;AAEEiB,QAAAA,IAAI,EAAE,UAFR;AAGEtD,QAAAA,KAAK,EAAE0D,GAAG,CAACF;AAHb,OADF,EAME;AACEnB,QAAAA,KAAK,EAAE,WADT;AAEEiB,QAAAA,IAAI,EAAE,OAFR;AAGEtD,QAAAA,KAAK,EAAE0D,GAAG,CAACD;AAHb,OANF,CATY,EAqBZ,IArBY,EAsBZ,YAtBY,CAAd;AAwBD,KAnCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAqCGC,GAAG,CAACF,QArCP,CADF,CAFJ,CA9CF,CADF,CADF,CA1BF,eAyHE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAExD,KAAjB;AAAwB,IAAA,KAAK,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,uDACE;AAAK,IAAA,KAAK,EAAE;AAAE6E,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,UAAU,EAAE,QAFP;AAGLC,MAAAA,cAAc,EAAE;AAHX,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE;AACLL,MAAAA,aAAa,EAAE,MADV;AAELM,MAAAA,UAAU,EAAE,KAFP;AAGLC,MAAAA,QAAQ,EAAE,MAHL;AAILC,MAAAA,KAAK,EAAE,aAJF;AAKLC,MAAAA,OAAO,EAAE,UALJ;AAMLP,MAAAA,MAAM,EAAE;AANH,KADT;AASE,IAAA,SAAS,EAAC,uCATZ;AAUE,IAAA,OAAO,EAAE,MAAM;AACb1C,MAAAA,cAAc,CACZ,YADY,EAEZ,2BAFY,EAGZ,iEAHY,EAIZ,QAJY,EAKZ,MALY,EAMZ,EANY,EAOZ,CACE;AACEE,QAAAA,KAAK,EAAE,QADT;AAEEiB,QAAAA,IAAI,EAAE,aAFR;AAGEtD,QAAAA,KAAK,EAAE;AAHT,OADF,EAME;AACEqC,QAAAA,KAAK,EAAE,cADT;AAEEiB,QAAAA,IAAI,EAAE,OAFR;AAGEtD,QAAAA,KAAK,EAAE;AAHT,OANF,CAPY,EAmBZ,IAnBY,EAoBZ,qBApBY,CAAd;AAsBD,KAjCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAPF,CADF,eA8CE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGa,QAAQ,IAAI,EAAZ,IACCA,QAAQ,CAACwE,GAAT,CAAa,CAACvB,MAAD,EAAS7D,KAAT,kBACX,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE;AACLwD,MAAAA,KAAK,EAAEK,MAAM,CAACL,KADT;AAELkB,MAAAA,aAAa,EAAE,MAFV;AAGLM,MAAAA,UAAU,EAAE,KAHP;AAILC,MAAAA,QAAQ,EAAE,MAJL;AAKLC,MAAAA,KAAK,EAAE,aALF;AAMLN,MAAAA,MAAM,EAAE;AANH,KADT;AASE,IAAA,SAAS,EAAC,uCATZ;AAUE,IAAA,OAAO,EAAE,MAAM;AACb1C,MAAAA,cAAc,CACZ,aADY,EAEX,QAAO2B,MAAM,CAACD,WAAY,SAFf,EAGZ,2GAHY,EAIZ,QAJY,EAKZ,MALY,EAMZ;AACErD,QAAAA,EAAE,EAAEsD,MAAM,CAACtD;AADb,OANY,EASZ,CACE;AACE6B,QAAAA,KAAK,EAAE,QADT;AAEEiB,QAAAA,IAAI,EAAE,aAFR;AAGEtD,QAAAA,KAAK,EAAE8D,MAAM,CAACD;AAHhB,OADF,EAME;AACExB,QAAAA,KAAK,EAAE,cADT;AAEEiB,QAAAA,IAAI,EAAE,OAFR;AAGEtD,QAAAA,KAAK,EAAE8D,MAAM,CAACL;AAHhB,OANF,CATY,EAqBZ,IArBY,EAsBZ,qBAtBY,CAAd;AAwBD,KAnCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAqCGK,MAAM,CAACD,WArCV,CADF,CAFJ,CA9CF,CADF,CADF,CAzHF,eAwNE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE7D,KAAjB;AAAwB,IAAA,KAAK,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGkB,KAAK,CAACmE,GAAN,CAAWC,IAAD,iBACT,oBAAC,QAAD;AACE,IAAA,EAAE,EAAEA,IAAI,CAAC9E,EADX;AAEE,IAAA,IAAI,EAAE8E,IAAI,CAAChC,IAFb;AAGE,IAAA,QAAQ,EAAEgC,IAAI,CAACC,QAHjB;AAIE,IAAA,iBAAiB,EAAED,IAAI,CAACE,iBAJ1B;AAKE,IAAA,MAAM,EAAEF,IAAI,CAACG,MALf;AAME,IAAA,MAAM,EAAEH,IAAI,CAACI,MANf;AAOE,IAAA,YAAY,EAAEJ,IAAI,CAACK,YAPrB;AAQE,IAAA,SAAS,EAAEL,IAAI,CAACM,SARlB;AASE,IAAA,IAAI,EAAEN,IAAI,CAACA,IATb;AAUE,IAAA,aAAa,EAAEA,IAAI,CAACO,eAVtB;AAWE,IAAA,QAAQ,EAAEP,IAAI,CAACM,SAXjB;AAYE,IAAA,OAAO,EAAEN,IAAI,CAACQ,SAZhB;AAaE,IAAA,aAAa,MAbf;AAcE,IAAA,SAAS,EAAE1B,SAdb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CADF,CAxNF,eAgPE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAErD,UAAU,CAACE,IADnB;AAEE,IAAA,KAAK,EAAEF,UAAU,CAACsB,KAFpB;AAGE,IAAA,WAAW,EAAEtB,UAAU,CAACuB,WAH1B;AAIE,IAAA,MAAM,EAAEvB,UAAU,CAACwB,MAJrB;AAKE,IAAA,OAAO,EAAExB,UAAU,CAACyB,OALtB;AAME,IAAA,MAAM,EAAEzB,UAAU,CAACqB,MANrB;AAOE,IAAA,IAAI,EAAErB,UAAU,CAACY,IAPnB;AAQE,IAAA,eAAe,EAAEiB,eARnB;AASE,IAAA,iBAAiB,EAAEC,iBATrB;AAUE,IAAA,MAAM,EAAE9B,UAAU,CAAC0B,MAVrB;AAWE,IAAA,iBAAiB,EAAE1B,UAAU,CAAC2B,iBAXhC;AAYE,IAAA,iBAAiB,EAAE3B,UAAU,CAAC4B,iBAZhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhPF,eA8PE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAEvB,KAAK,CAACH,IADd;AAEE,IAAA,MAAM,EAAEG,KAAK,CAACgB,MAFhB;AAGE,IAAA,KAAK,EAAEhB,KAAK,CAACiB,KAAN,IAAe,EAHxB;AAIE,IAAA,WAAW,EAAEjB,KAAK,CAACkB,WAAN,IAAqB,EAJpC;AAKE,IAAA,MAAM,EAAElB,KAAK,CAACmB,MAAN,IAAgB,EAL1B;AAME,IAAA,OAAO,EAAEnB,KAAK,CAACoB,OAAN,IAAiB,EAN5B;AAOE,IAAA,YAAY,EAAEiC,YAPhB;AAQE,IAAA,IAAI,EAAErD,KAAK,CAACO,IAAN,IAAc,EARtB;AASE,IAAA,UAAU,EAAE0C,UATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9PF,CAHF,CADF;AAgRD,CAveD;;AAyeA,MAAM0B,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLpB,IAAAA,KAAK,EAAEoB,KAAK,CAACpB,KAAN,CAAYA;AADd,GAAP;AAGD,CAJD;;AAMA,eAAexF,UAAU,CAACD,OAAO,CAAC4G,eAAD,EAAkB,IAAlB,CAAP,CAA+BtF,KAA/B,CAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport * as api_links from \"../APILinks\";\nimport FormDialog from \"../components/FormDialog\";\nimport UserCard from \"../components/UserCard\";\nimport AlertDialog from \"../components/AlertDialog\";\nimport UtilityComponent from \"../components/UtilityComponent\";\nimport TitleCard from \"../components/TitleCard\";\nimport HEADER_NAV_TITLES from \"../header_nav_titles\";\n\nimport axios from \"axios\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <>\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    </>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst Admin = (props) => {\n  const [tags, setTags] = React.useState([]);\n  const [statuses, setStatuses] = React.useState([]);\n  const [formDialog, setFormDialog] = React.useState({\n    open: false,\n  });\n  const [users, setUsers] = React.useState([]);\n  const [alert, setAlert] = React.useState({\n    open: false,\n  });\n\n  async function fetchTags() {\n    axios\n      .get(api_links.API_ROOT + \"tags/\")\n      .then((res) => {\n        setTags(res.data);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  async function fetchStatuses() {\n    axios\n      .get(api_links.API_ROOT + \"issuestatus/\")\n      .then((res) => {\n        setStatuses(res.data);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  async function fetchUsers() {\n    axios\n      .get(api_links.API_ROOT + \"users/\")\n      .then((res) => {\n        setUsers(res.data);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  React.useEffect(() => {\n    fetchTags();\n    fetchStatuses();\n    setFormDialog({ open: false });\n    fetchUsers();\n  }, []);\n\n  const openFormDialog = (\n    action,\n    title,\n    description,\n    cancel,\n    confirm,\n    data,\n    fields,\n    showColorSwatches,\n    colorSwatchesType\n  ) => {\n    setFormDialog({\n      open: true,\n      title,\n      description,\n      cancel,\n      confirm,\n      action,\n      data,\n      fields,\n      showColorSwatches,\n      colorSwatchesType,\n    });\n  };\n\n  const closeFormDialog = () => {\n    setFormDialog(() => ({\n      open: false,\n    }));\n  };\n\n  const confirmFormDialog = (action, choice, data, fields) => {\n    switch (action) {\n      case \"edit_tag\":\n        choice && editTag(data, fields);\n        break;\n      case \"add_tag\":\n        choice && addTag(fields);\n        break;\n      case \"edit_status\":\n        choice && editStatus(data, fields);\n        break;\n      case \"add_status\":\n        choice && addStatus(fields);\n        break;\n    }\n  };\n\n  const editTag = (data, fields) => {\n    let id = data.id;\n    let tag_text_index = fields.findIndex((field) => field.name == \"tag_text\");\n    let color_index = fields.findIndex((field) => field.name == \"color\");\n    let tag_text = fields[tag_text_index].value;\n    let color = fields[color_index].value;\n    let tag = {\n      tag_text: tag_text,\n      color: color,\n    };\n    console.log(tag);\n    axios\n      .patch(api_links.API_ROOT + `tags/${id}/`, tag)\n      .then((res) => {\n        fetchTags();\n        console.log(res.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const editStatus = (data, fields) => {\n    let id = data.id;\n    let status_text_index = fields.findIndex(\n      (field) => field.name == \"status_text\"\n    );\n    let color_index = fields.findIndex((field) => field.name == \"color\");\n    let status_text = fields[status_text_index].value;\n    let color = fields[color_index].value;\n    let status = {\n      status_text: status_text,\n      color: color,\n    };\n    console.log(status);\n    axios\n      .patch(api_links.API_ROOT + `issuestatus/${id}/`, status)\n      .then((res) => {\n        fetchStatuses();\n        console.log(res.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const addTag = (fields) => {\n    let tag_text_index = fields.findIndex((field) => field.name == \"tag_text\");\n    let color_index = fields.findIndex((field) => field.name == \"color\");\n    let tag_text = fields[tag_text_index].value;\n    let color = fields[color_index].value;\n    let tag = {\n      tag_text: tag_text,\n      color: color,\n    };\n    console.log(tag);\n    axios\n      .post(api_links.API_ROOT + \"tags/\", tag)\n      .then((res) => {\n        fetchTags();\n        console.log(res.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const addStatus = (fields) => {\n    let status_text_index = fields.findIndex(\n      (field) => field.name == \"status_text\"\n    );\n    let color_index = fields.findIndex((field) => field.name == \"color\");\n    let status_text = fields[status_text_index].value;\n    let color = fields[color_index].value;\n    let status = {\n      status_text: status_text,\n      color: color,\n    };\n    console.log(status);\n    axios\n      .post(api_links.API_ROOT + \"issuestatus/\", status)\n      .then((res) => {\n        fetchStatuses();\n        console.log(res.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const openAlert = (action, title, description, cancel, confirm, data) => {\n    setAlert({\n      open: true,\n      title,\n      description,\n      cancel,\n      confirm,\n      action,\n      data,\n    });\n  };\n\n  const closeAlert = () => {\n    setAlert((prevAlertState) => ({\n      open: false,\n    }));\n  };\n\n  const handleUserUpdate = (id, field, bool) => {\n    let data = {\n      [field]: bool,\n    };\n    axios\n      .patch(api_links.API_ROOT + `user_status/${id}/`, data)\n      .then((res) => {\n        console.log(res);\n        fetchUsers();\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const confirmAlert = (action, choice, data) => {\n    choice && handleUserUpdate(data.id, data.field, data.bool);\n  };\n\n  return (\n    <>\n      <UtilityComponent onlyAdmins title={HEADER_NAV_TITLES.ADMIN} page=\"ADMIN\" />\n\n      <div>\n        <TitleCard title=\"Admin\" />\n\n        <AppBar position=\"sticky\">\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            aria-label=\"simple tabs example\"\n          >\n            <Tab\n              style={{ textTransform: \"none\" }}\n              label=\"Issue Tags\"\n              {...a11yProps(0)}\n            />\n            <Tab\n              style={{ textTransform: \"none\" }}\n              label=\"Issue Status\"\n              {...a11yProps(1)}\n            />\n            <Tab\n              style={{ textTransform: \"none\" }}\n              label={props.theme == \"palpatine\" ? \"Jedi\" : \"Users\"}\n              {...a11yProps(2)}\n            />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n          <>\n            <div style={{ margin: \"10px\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"centet\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Button\n                  style={{\n                    textTransform: \"none\",\n                    fontWeight: \"900\",\n                    fontSize: \"20px\",\n                    width: \"fit-content\",\n                    padding: \"5ps 10px\",\n                    margin: \"20px\",\n                  }}\n                  className=\"project-issue-tag issue-button-filled\"\n                  onClick={() => {\n                    openFormDialog(\n                      \"add_tag\",\n                      \"Create a new Tag\",\n                      \"Tag text has to be unique, color can be any valid CSS color.\",\n                      \"Cancel\",\n                      \"Save\",\n                      {},\n                      [\n                        {\n                          title: \"Tag\",\n                          name: \"tag_text\",\n                          value: \" \",\n                        },\n                        {\n                          title: \"Tag color\",\n                          name: \"color\",\n                          value: \" \",\n                        },\n                      ],\n                      true,\n                      \"tag_colors\"\n                    );\n                  }}\n                >\n                  + Create a new Tag\n                </Button>\n              </div>\n              <div className=\"admin-tags-container\">\n                {tags != [] &&\n                  tags.map((tag) => (\n                    <Button\n                      style={{\n                        color: tag.color,\n                        textTransform: \"none\",\n                        fontWeight: \"900\",\n                        fontSize: \"17px\",\n                        width: \"fit-content\",\n                        margin: \"10px auto\",\n                      }}\n                      className=\"project-issue-tag issue-button-filled\"\n                      onClick={() => {\n                        openFormDialog(\n                          \"edit_tag\",\n                          `Edit ${tag.tag_text} Tag`,\n                          \"You can change the tag text and color. Color can be any valid CSS color.\",\n                          \"Cancel\",\n                          \"Save\",\n                          {\n                            id: tag.id,\n                          },\n                          [\n                            {\n                              title: \"Tag\",\n                              name: \"tag_text\",\n                              value: tag.tag_text,\n                            },\n                            {\n                              title: \"Tag color\",\n                              name: \"color\",\n                              value: tag.color,\n                            },\n                          ],\n                          true,\n                          \"tag_colors\"\n                        );\n                      }}\n                    >\n                      {tag.tag_text}\n                    </Button>\n                  ))}\n              </div>\n            </div>\n          </>\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <>\n            <div style={{ margin: \"10px\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"centet\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Button\n                  style={{\n                    textTransform: \"none\",\n                    fontWeight: \"900\",\n                    fontSize: \"20px\",\n                    width: \"fit-content\",\n                    padding: \"5ps 10px\",\n                    margin: \"20px\",\n                  }}\n                  className=\"project-issue-tag issue-button-filled\"\n                  onClick={() => {\n                    openFormDialog(\n                      \"add_status\",\n                      \"Create a New Issue Status\",\n                      \"Status text has to be unique, color can be any valid CSS color.\",\n                      \"Cancel\",\n                      \"Save\",\n                      {},\n                      [\n                        {\n                          title: \"Status\",\n                          name: \"status_text\",\n                          value: \" \",\n                        },\n                        {\n                          title: \"Status color\",\n                          name: \"color\",\n                          value: \" \",\n                        },\n                      ],\n                      true,\n                      \"issue_status_colors\"\n                    );\n                  }}\n                >\n                  + Create a new Status\n                </Button>\n              </div>\n              <div className=\"admin-tags-container\">\n                {statuses != [] &&\n                  statuses.map((status, index) => (\n                    <Button\n                      style={{\n                        color: status.color,\n                        textTransform: \"none\",\n                        fontWeight: \"900\",\n                        fontSize: \"17px\",\n                        width: \"fit-content\",\n                        margin: \"10px auto\",\n                      }}\n                      className=\"project-issue-tag issue-button-filled\"\n                      onClick={() => {\n                        openFormDialog(\n                          \"edit_status\",\n                          `Edit ${status.status_text} status`,\n                          \"You can change the status text and color. Status text has to be unique, color can be any valid CSS color.\",\n                          \"Cancel\",\n                          \"Save\",\n                          {\n                            id: status.id,\n                          },\n                          [\n                            {\n                              title: \"Status\",\n                              name: \"status_text\",\n                              value: status.status_text,\n                            },\n                            {\n                              title: \"Status color\",\n                              name: \"color\",\n                              value: status.color,\n                            },\n                          ],\n                          true,\n                          \"issue_status_colors\"\n                        );\n                      }}\n                    >\n                      {status.status_text}\n                    </Button>\n                  ))}\n              </div>\n            </div>\n          </>\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          <div className=\"user-card-container\">\n            <div className=\"user-card-grid\">\n              {users.map((user) => (\n                <UserCard\n                  id={user.id}\n                  name={user.name}\n                  is_admin={user.is_admin}\n                  enrollment_number={user.enrollment_number}\n                  degree={user.degree}\n                  branch={user.branch}\n                  current_year={user.current_year}\n                  is_active={user.is_active}\n                  user={user.user}\n                  display_photo={user.display_picture}\n                  isActive={user.is_active}\n                  isAdmin={user.is_master}\n                  fromAdminPage\n                  openAlert={openAlert}\n                />\n              ))}\n            </div>\n          </div>\n        </TabPanel>\n        <FormDialog\n          open={formDialog.open}\n          title={formDialog.title}\n          description={formDialog.description}\n          cancel={formDialog.cancel}\n          confirm={formDialog.confirm}\n          action={formDialog.action}\n          data={formDialog.data}\n          closeFormDialog={closeFormDialog}\n          confirmFormDialog={confirmFormDialog}\n          fields={formDialog.fields}\n          showColorSwatches={formDialog.showColorSwatches}\n          colorSwatchesType={formDialog.colorSwatchesType}\n        />\n        <AlertDialog\n          open={alert.open}\n          action={alert.action}\n          title={alert.title || \"\"}\n          description={alert.description || \"\"}\n          cancel={alert.cancel || \"\"}\n          confirm={alert.confirm || \"\"}\n          confirmAlert={confirmAlert}\n          data={alert.data || {}}\n          closeAlert={closeAlert}\n        />\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    theme: state.theme.theme,\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, null)(Admin));\n"]},"metadata":{},"sourceType":"module"}