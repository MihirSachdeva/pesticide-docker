{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/components/UserCard.js\";\nimport React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { Link, Redirect } from \"react-router-dom\";\nexport default function UserCard(props) {\n  const isMobile = useMediaQuery(\"(max-width: 700px)\");\n  return /*#__PURE__*/React.createElement(Card // style={{\n  //   borderRadius: \"15px\",\n  //   padding: '7px 0'\n  // }}\n  , {\n    className: \"user-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    avatar: /*#__PURE__*/React.createElement(Link, {\n      to: `/users/${props.enrollment_number}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: isMobile ? \"100px\" : \"120px\",\n        height: isMobile ? \"100px\" : \"120px\",\n        borderRadius: \"70px\",\n        padding: \"4px\",\n        backgroundImage: props.display_photo ? `url(${props.display_photo})` : \"url(../sunglasses.svg)\"\n      },\n      className: \"image-shadow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    })),\n    title: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: isMobile ? \"17px\" : \"20px\",\n        fontWeight: \"700\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, !props.name ? /*#__PURE__*/React.createElement(Skeleton, {\n      width: 100,\n      height: 50,\n      animation: \"wave\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(Link, {\n      to: \"/users/\" + props.enrollment_number,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }\n    }, props.name))),\n    subheader: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontWeight: \"600\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, props.isAdmin && /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 35\n      }\n    }, \"Admin\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }), props.current_year && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }, [\"Webmaster\", \"Project Associate\", \"Project Leader\", \"Coordinator\", \"Boomer\"][props.current_year - 1]), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, props.current_year ? [\"First Year\", \"Second Year\", \"Third Year\", \"Fourth Year\", \"Fifth Year\", \"Boomer\"][props.current_year - 1] : /*#__PURE__*/React.createElement(Skeleton, {\n      width: 140,\n      animation: \"wave\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), props.fromAdminPage && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      marginBottom: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: props.isAdmin ? \"btn-filled-small btn-filled-small-error\" : \"btn-filled-small btn-filled-small-success\",\n    style: {\n      fontWeight: \"900\",\n      textTransform: \"none\"\n    },\n    onClick: () => {\n      !props.isAdmin ? props.openAlert(\"make_admin\", `Make ${props.name} an admin?`, \"All admins can delete and update status of issues and projects, disable any user and even revoke admin status from other admins. All admins will be notified by email.\", \"Cancel\", \"Confirm\", {\n        id: props.id,\n        field: \"is_master\",\n        bool: true\n      }) : props.openAlert(\"revoke_admin\", `Revoke admin status of ${props.name}?`, \"All admins will be notified by email.\", \"Cancel\", \"Confirm\", {\n        id: props.id,\n        field: \"is_master\",\n        bool: false\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, props.isAdmin ? \"Remove Admin\" : \"Make Admin\"), /*#__PURE__*/React.createElement(Button, {\n    className: props.isActive ? \"btn-filled-small btn-filled-small-error\" : \"btn-filled-small btn-filled-small-success\",\n    style: {\n      fontWeight: \"900\",\n      textTransform: \"none\"\n    },\n    onClick: () => {\n      !props.isActive ? props.openAlert(\"enable_user\", `Enable ${props.name} to use Pesticide?`, `${props.name} will be able to log in again, report issues, make comments and create/be a member of projects.`, \"Cancel\", \"Enable\", {\n        id: props.id,\n        field: \"is_active\",\n        bool: true\n      }) : props.openAlert(\"disable_user\", `Disable ${props.name} to use Pesticide?`, `${props.name} will NOT be able to log in again, report issues, make comments and create/be a member of projects.`, \"Cancel\", \"Disable\", {\n        id: props.id,\n        field: \"is_active\",\n        bool: false\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, props.isActive ? \"Disable\" : \"Enable\")));\n}","map":{"version":3,"sources":["/app/frontend/src/components/UserCard.js"],"names":["React","Card","CardHeader","Button","Skeleton","useMediaQuery","Link","Redirect","UserCard","props","isMobile","enrollment_number","width","height","borderRadius","padding","backgroundImage","display_photo","display","justifyContent","alignItems","fontSize","fontWeight","name","isAdmin","current_year","fromAdminPage","marginBottom","textTransform","openAlert","id","field","bool","isActive"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nimport { Link, Redirect } from \"react-router-dom\";\n\nexport default function UserCard(props) {\n  const isMobile = useMediaQuery(\"(max-width: 700px)\");\n\n  return (\n    <Card\n      // style={{\n      //   borderRadius: \"15px\",\n      //   padding: '7px 0'\n      // }}\n      className=\"user-card\"\n    >\n      <CardHeader\n        avatar={\n          <Link to={`/users/${props.enrollment_number}`}>\n            <div\n              style={{\n                width: isMobile ? \"100px\" : \"120px\",\n                height: isMobile ? \"100px\" : \"120px\",\n                borderRadius: \"70px\",\n                padding: \"4px\",\n                backgroundImage: props.display_photo\n                  ? `url(${props.display_photo})`\n                  : \"url(../sunglasses.svg)\",\n              }}\n              className=\"image-shadow\"\n            ></div>\n          </Link>\n        }\n        title={\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n            }}\n          >\n            <div style={{ fontSize: isMobile ? \"17px\" : \"20px\", fontWeight: \"700\" }}>\n              {!props.name ? (\n                <Skeleton width={100} height={50} animation=\"wave\" />\n              ) : (\n                  <Link to={\"/users/\" + props.enrollment_number}>\n                    {props.name}\n                  </Link>\n                )}\n            </div>\n          </div>\n        }\n        subheader={\n          <>\n            <div style={{ fontWeight: \"600\" }}>\n              <span>\n                {props.isAdmin && <strong>Admin</strong>}\n              </span>\n              <br />\n              {props.current_year && (\n                <>\n                  <span>\n                    {\n                      [\n                        \"Webmaster\",\n                        \"Project Associate\",\n                        \"Project Leader\",\n                        \"Coordinator\",\n                        \"Boomer\",\n                      ][props.current_year - 1]\n                    }\n                  </span>\n                  <br />\n                </>\n              )}\n              <span>\n                {props.current_year ? (\n                  [\n                    \"First Year\",\n                    \"Second Year\",\n                    \"Third Year\",\n                    \"Fourth Year\",\n                    \"Fifth Year\",\n                    \"Boomer\",\n                  ][props.current_year - 1]\n                ) : (\n                    <Skeleton width={140} animation=\"wave\" />\n                  )}\n              </span>\n              <br />\n            </div>\n          </>\n        }\n      />\n      {props.fromAdminPage && (\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            marginBottom: \"15px\",\n          }}\n        >\n          <Button\n            className={\n              props.isAdmin\n                ? \"btn-filled-small btn-filled-small-error\"\n                : \"btn-filled-small btn-filled-small-success\"\n            }\n            style={{\n              fontWeight: \"900\",\n              textTransform: \"none\",\n            }}\n            onClick={() => {\n              !props.isAdmin\n                ? props.openAlert(\n                  \"make_admin\",\n                  `Make ${props.name} an admin?`,\n                  \"All admins can delete and update status of issues and projects, disable any user and even revoke admin status from other admins. All admins will be notified by email.\",\n                  \"Cancel\",\n                  \"Confirm\",\n                  {\n                    id: props.id,\n                    field: \"is_master\",\n                    bool: true,\n                  }\n                )\n                : props.openAlert(\n                  \"revoke_admin\",\n                  `Revoke admin status of ${props.name}?`,\n                  \"All admins will be notified by email.\",\n                  \"Cancel\",\n                  \"Confirm\",\n                  {\n                    id: props.id,\n                    field: \"is_master\",\n                    bool: false,\n                  }\n                );\n            }}\n          >\n            {props.isAdmin ? \"Remove Admin\" : \"Make Admin\"}\n          </Button>\n          <Button\n            className={\n              props.isActive\n                ? \"btn-filled-small btn-filled-small-error\"\n                : \"btn-filled-small btn-filled-small-success\"\n            }\n            style={{\n              fontWeight: \"900\",\n              textTransform: \"none\",\n            }}\n            onClick={() => {\n              !props.isActive\n                ? props.openAlert(\n                  \"enable_user\",\n                  `Enable ${props.name} to use Pesticide?`,\n                  `${props.name} will be able to log in again, report issues, make comments and create/be a member of projects.`,\n                  \"Cancel\",\n                  \"Enable\",\n                  {\n                    id: props.id,\n                    field: \"is_active\",\n                    bool: true,\n                  }\n                )\n                : props.openAlert(\n                  \"disable_user\",\n                  `Disable ${props.name} to use Pesticide?`,\n                  `${props.name} will NOT be able to log in again, report issues, make comments and create/be a member of projects.`,\n                  \"Cancel\",\n                  \"Disable\",\n                  {\n                    id: props.id,\n                    field: \"is_active\",\n                    bool: false,\n                  }\n                );\n            }}\n          >\n            {props.isActive ? \"Disable\" : \"Enable\"}\n          </Button>\n        </div>\n      )}\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}