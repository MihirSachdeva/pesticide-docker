{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/components/ImageWithModal.jsx\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Input from \"@material-ui/core/Input\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\nimport { IconButton } from \"@material-ui/core\";\nimport Slide from \"@material-ui/core/Slide\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport Grow from \"@material-ui/core/Grow\";\nconst isMobile = window.innerWidth < 850;\nconst projectDetails = {\n  display: \"flex\",\n  flexDirection: isMobile ? \"column\" : \"row\",\n  justifyContent: isMobile ? \"flex-start\" : \"space-between\",\n  minWidth: \"500px\"\n};\nconst projectDetailsLeftRight = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\"\n};\nconst issueContainer = {\n  display: \"flex\",\n  flexDirection: \"column\"\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  },\n  input: {\n    display: \"none\"\n  }\n}));\nconst statusList = [\"❌ Closed\", \"🔵 Open\", \"✔️ Fixed\"];\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 10\n    }\n  }));\n});\nexport default function ImageWithModal(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: props.src,\n    alt: props.alt,\n    onClick: handleClickOpen,\n    className: \"image-with-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Dialog, {\n    fullScreen: fullScreen,\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"responsive-dialog-title\",\n    TransitionComponent: Grow,\n    transitionDuration: {\n      enter: 100,\n      exit: 100\n    },\n    maxWidth: \"xl\",\n    className: !isMobile ? \"modal-rounded\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"responsive-dialog-title\",\n    className: \"modal-title-issue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    className: \"btn-filled-small btn-filled-bg-transparent btn-round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CloseRoundedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Image\"))), /*#__PURE__*/React.createElement(DialogContent, {\n    style: {\n      padding: \"5px 10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: props.src,\n    alt: props.alt,\n    className: \"image-in-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/app/frontend/src/components/ImageWithModal.jsx"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","Input","useTheme","makeStyles","CloseRoundedIcon","SendRoundedIcon","IconButton","Slide","PhotoCamera","Grow","isMobile","window","innerWidth","projectDetails","display","flexDirection","justifyContent","minWidth","projectDetailsLeftRight","alignItems","issueContainer","useStyles","theme","root","margin","spacing","input","statusList","Transition","forwardRef","props","ref","ImageWithModal","classes","open","setOpen","useState","fullScreen","breakpoints","down","handleClickOpen","handleClose","src","alt","enter","exit","padding"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Input from \"@material-ui/core/Input\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\nimport { IconButton } from \"@material-ui/core\";\nimport Slide from \"@material-ui/core/Slide\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport Grow from \"@material-ui/core/Grow\";\n\nconst isMobile = window.innerWidth < 850;\n\nconst projectDetails = {\n  display: \"flex\",\n  flexDirection: isMobile ? \"column\" : \"row\",\n  justifyContent: isMobile ? \"flex-start\" : \"space-between\",\n  minWidth: \"500px\",\n};\n\nconst projectDetailsLeftRight = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n};\n\nconst issueContainer = {\n  display: \"flex\",\n  flexDirection: \"column\",\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n}));\n\nconst statusList = [\"❌ Closed\", \"🔵 Open\", \"✔️ Fixed\"];\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function ImageWithModal(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <img\n        src={props.src}\n        alt={props.alt}\n        onClick={handleClickOpen}\n        className=\"image-with-modal\"\n      />\n\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n        TransitionComponent={Grow}\n        transitionDuration={{\n          enter: 100,\n          exit: 100,\n        }}\n        maxWidth=\"xl\"\n        className={!isMobile ? \"modal-rounded\" : null}\n      >\n        <DialogTitle id=\"responsive-dialog-title\" className=\"modal-title-issue\">\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\n            <Button\n              onClick={handleClose}\n              className=\"btn-filled-small btn-filled-bg-transparent btn-round\"\n            >\n              <CloseRoundedIcon />\n            </Button>\n            <div>Image</div>\n          </div>\n        </DialogTitle>\n        <DialogContent style={{ padding: \"5px 10px\" }}>\n          <img src={props.src} alt={props.alt} className=\"image-in-modal\" />\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}