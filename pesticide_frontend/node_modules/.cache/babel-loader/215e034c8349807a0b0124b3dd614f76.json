{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/components/NewProjectWithModal.jsx\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\nimport CreateNewFolderRoundedIcon from \"@material-ui/icons/CreateNewFolderRounded\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DefaultTooltip from \"@material-ui/core/Tooltip\";\nimport Grow from \"@material-ui/core/Grow\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport NewProjectForm from \"./NewProjectForm\";\nconst isMobile = window.innerWidth < 850;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  },\n  input: {\n    display: \"none\"\n  }\n}));\n\nconst NewProjectWithModal = props => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const magic = {\n    color: props.currentTheme == \"palpatine\" && \"red\"\n  };\n  const Tooltip = withStyles({\n    tooltip: {\n      backgroundColor: [\"dark\", \"solarizedDark\", \"palpatine\"].includes(props.currentTheme) ? \"#353535\" : \"#ffffff\",\n      color: [\"dark\", \"solarizedDark\", \"palpatine\"].includes(props.currentTheme) ? \"#ffffff\" : \"#353535\",\n      backgroundFilter: \"blur(20px)\",\n      fontSize: \"17px\",\n      fontWeight: \"900\",\n      padding: \"5px\",\n      border: \"1px solid #808080b3\",\n      borderRadius: \"10px\"\n    }\n  })(DefaultTooltip);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, props.floating && /*#__PURE__*/React.createElement(Fab, {\n    onClick: handleClickOpen,\n    color: \"secondary\",\n    style: {\n      position: \"absolute\",\n      bottom: \"30px\",\n      right: \"30px\",\n      zIndex: 1200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Tooltip, {\n    title: !props.open ? \"Create project\" : \"\",\n    placement: \"right\",\n    className: \"drawer-btn-filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    style: magic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"drawer-project-icon-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CreateNewFolderRoundedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Create project\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Dialog, {\n    fullScreen: fullScreen,\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"responsive-dialog-title\",\n    TransitionComponent: Grow,\n    transitionDuration: {\n      enter: 100,\n      exit: 100\n    },\n    className: !isMobile ? \"modal-rounded\" : null,\n    maxWidth: \"xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"responsive-dialog-title\",\n    className: \"modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-filled-small btn-filled-bg-transparent btn-round\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CloseRoundedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  })), \"Create New Project\"), /*#__PURE__*/React.createElement(DialogContent, {\n    style: {\n      padding: \"5px 10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NewProjectForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    currentTheme: state.theme.theme\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, null)(NewProjectWithModal));","map":{"version":3,"sources":["/app/frontend/src/components/NewProjectWithModal.jsx"],"names":["React","Button","Dialog","DialogContent","DialogTitle","useMediaQuery","useTheme","makeStyles","withStyles","CloseRoundedIcon","CreateNewFolderRoundedIcon","Fab","AddIcon","ListItem","ListItemIcon","ListItemText","DefaultTooltip","Grow","connect","withRouter","NewProjectForm","isMobile","window","innerWidth","useStyles","theme","root","margin","spacing","input","display","NewProjectWithModal","props","classes","open","setOpen","useState","fullScreen","breakpoints","down","handleClickOpen","handleClose","magic","color","currentTheme","Tooltip","tooltip","backgroundColor","includes","backgroundFilter","fontSize","fontWeight","padding","border","borderRadius","floating","position","bottom","right","zIndex","enter","exit","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\nimport CreateNewFolderRoundedIcon from \"@material-ui/icons/CreateNewFolderRounded\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DefaultTooltip from \"@material-ui/core/Tooltip\";\nimport Grow from \"@material-ui/core/Grow\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport NewProjectForm from \"./NewProjectForm\";\n\nconst isMobile = window.innerWidth < 850;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n}));\n\nconst NewProjectWithModal = (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const magic = {\n    color: props.currentTheme == \"palpatine\" && \"red\",\n  };\n\n  const Tooltip = withStyles({\n    tooltip: {\n      backgroundColor: [\"dark\", \"solarizedDark\", \"palpatine\"].includes(\n        props.currentTheme\n      )\n        ? \"#353535\"\n        : \"#ffffff\",\n      color: [\"dark\", \"solarizedDark\", \"palpatine\"].includes(props.currentTheme)\n        ? \"#ffffff\"\n        : \"#353535\",\n      backgroundFilter: \"blur(20px)\",\n      fontSize: \"17px\",\n      fontWeight: \"900\",\n      padding: \"5px\",\n      border: \"1px solid #808080b3\",\n      borderRadius: \"10px\",\n    },\n  })(DefaultTooltip);\n\n  return (\n    <div>\n      {props.floating && (\n        <Fab\n          onClick={handleClickOpen}\n          color=\"secondary\"\n          style={{\n            position: \"absolute\",\n            bottom: \"30px\",\n            right: \"30px\",\n            zIndex: 1200,\n          }}\n        >\n          <AddIcon />\n        </Fab>\n      )}\n      <Tooltip\n        title={!props.open ? \"Create project\" : \"\"}\n        placement=\"right\"\n        className=\"drawer-btn-filled\"\n      >\n        <ListItem button onClick={handleClickOpen}>\n          <ListItemIcon style={magic}>\n            <div className=\"drawer-project-icon-container\">\n              <CreateNewFolderRoundedIcon />\n            </div>\n          </ListItemIcon>\n          <ListItemText primary=\"Create project\" />\n        </ListItem>\n      </Tooltip>\n\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n        TransitionComponent={Grow}\n        transitionDuration={{\n          enter: 100,\n          exit: 100,\n        }}\n        className={!isMobile ? \"modal-rounded\" : null}\n        maxWidth=\"xl\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\" className=\"modal-title\">\n          <Button\n            className=\"btn-filled-small btn-filled-bg-transparent btn-round\"\n            onClick={handleClose}\n          >\n            <CloseRoundedIcon />\n          </Button>\n          Create New Project\n        </DialogTitle>\n\n        <DialogContent style={{ padding: \"5px 10px\" }}>\n          <NewProjectForm />\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    currentTheme: state.theme.theme,\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, null)(NewProjectWithModal));\n"]},"metadata":{},"sourceType":"module"}