{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/containers/Dashboard.js\";\nimport React from \"react\";\nimport { PieChart, BarChart } from \"react-chartkick\";\nimport \"chart.js\";\nimport { Card, Typography, Button, useMediaQuery } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport * as api_links from \"../APILinks\";\nimport UtilityComponent from \"../components/UtilityComponent\";\nimport HEADER_NAV_TITLES from \"../header_nav_titles\";\n\nconst Dashboard = props => {\n  const isMobile = useMediaQuery(\"(max-width: 500px)\");\n  const userId = localStorage.getItem(\"id\");\n  const [name, setName] = React.useState(\"\");\n  const [enrNo, setEnrNo] = React.useState(\"\");\n  const [projectsStatusData, setProjectsStatusData] = React.useState([]);\n  const [topReporters, setTopReporters] = React.useState([]);\n  React.useEffect(() => {\n    axios.get(api_links.API_ROOT + `users/${userId}/`).then(res => {\n      setName(res.data.name.split(\" \")[0]);\n      setEnrNo(res.data.enrollment_number);\n    }).catch(err => console.log(err));\n    axios.get(api_links.API_ROOT + \"issuestatustally/\").then(res => {\n      let issuesData = [];\n      let resolved = 0,\n          pending = 0,\n          closed = 0;\n      res.data.forEach(status => {\n        switch (status.type) {\n          case \"Pending\":\n            pending += status.number_of_issues;\n            break;\n\n          case \"Resolved\":\n            resolved += status.number_of_issues;\n            break;\n\n          case \"Closed\":\n            closed += status.number_of_issues;\n            break;\n        }\n\n        issuesData = [[\"Pending\", pending], [\"Resolved\", resolved], [\"Closed\", closed]];\n      });\n      setProjectsStatusData(issuesData);\n    }).catch(err => console.log(err));\n    axios.get(api_links.API_ROOT + \"topdebuggers/\").then(res => {\n      let topDebuggers = [];\n      topDebuggers = res.data.map(user => [user.user_name, user.num_issues]);\n      setTopReporters(topDebuggers);\n    }).catch(err => console.log(err));\n  }, [props.isAuthenticated]);\n  const bugQuoteList = [\"Never allow the same bug to bite you twice.\", \"'It's not a bug - it's an undocumented feature.'\", \"Let he who has a bug free software cast the first stone.\", \"Debugging : Removing Bugs :: Programming : Adding Bugs\", \"Testing can be used to show the presence of bugs, but never to show their absence!\"];\n  const starWarsQuoteList = [`\"It’s not my fault.” – Han Solo`, `“Do. Or do not. There is no try.” – Yoda`, `“I find your lack of faith disturbing.” – Darth Vader`, `“Your eyes can deceive you. Don’t trust them.” – Obi-Wan Kenobi`, `“Your focus determines your reality.” – Qui-Gon Jinn`];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(UtilityComponent, {\n    title: HEADER_NAV_TITLES.DASHBOARD,\n    page: \"HOME\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"dashboard-hero-welcome-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-hero-image image-shadow\",\n    style: {\n      backgroundImage: props.theme != \"palpatine\" ? \"url(./fix.svg)\" : \"url(./jedi_order.png\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-hero-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: \"dashboard-hero-welcome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, props.theme != \"palpatine\" ? \"Pesticide\" : \"Millenium Falcon\"), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: \"dashboard-hero-quote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, props.theme != \"palpatine\" ? bugQuoteList[Math.floor(Math.random() * bugQuoteList.length)] : starWarsQuoteList[Math.floor(Math.random() * starWarsQuoteList.length)]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-hero-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/issues\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-filled-small\",\n    style: {\n      whiteSpace: \"nowrap\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, !isMobile && \"View \", \"Issues\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"/projects\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-filled-small\",\n    style: {\n      whiteSpace: \"nowrap\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, !isMobile && \"Browse \", \"Projects\")), /*#__PURE__*/React.createElement(Link, {\n    to: `/users/${enrNo}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-filled-small\",\n    style: {\n      whiteSpace: \"nowrap\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \"My Page\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"data-charts-top-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"donut-chart-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      fontSize: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, \"Issues at a Glance\", /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontWeight: \"400\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, \"Status tally of all issues.\")), /*#__PURE__*/React.createElement(PieChart, {\n    donut: true,\n    colors: props.theme != \"palpatine\" ? [\"#3b7fff\", \"#00ea3f\", \"#ff0021\"] : [\"#4f0000\", \"#960000\", \"#ff0000\"],\n    data: projectsStatusData,\n    style: {\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    className: \"donut-chart-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      fontSize: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, \"Top \", props.theme != \"palpatine\" ? \"Debuggers\" : \"Jedi\", /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontWeight: \"400\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, \"Users who have reported highest number of issues.\")), /*#__PURE__*/React.createElement(BarChart, {\n    colors: props.theme != \"palpatine\" ? [\"3b7fff\"] : [\"ff0000\"],\n    data: topReporters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    theme: state.theme.theme || \"default\"\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, null)(Dashboard));","map":{"version":3,"sources":["/app/frontend/src/containers/Dashboard.js"],"names":["React","PieChart","BarChart","Card","Typography","Button","useMediaQuery","axios","connect","Link","withRouter","api_links","UtilityComponent","HEADER_NAV_TITLES","Dashboard","props","isMobile","userId","localStorage","getItem","name","setName","useState","enrNo","setEnrNo","projectsStatusData","setProjectsStatusData","topReporters","setTopReporters","useEffect","get","API_ROOT","then","res","data","split","enrollment_number","catch","err","console","log","issuesData","resolved","pending","closed","forEach","status","type","number_of_issues","topDebuggers","map","user","user_name","num_issues","isAuthenticated","bugQuoteList","starWarsQuoteList","DASHBOARD","backgroundImage","theme","Math","floor","random","length","whiteSpace","fontSize","fontWeight","margin","mapStateToProps","state","auth","token"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { PieChart, BarChart } from \"react-chartkick\";\nimport \"chart.js\";\nimport { Card, Typography, Button, useMediaQuery } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport * as api_links from \"../APILinks\";\nimport UtilityComponent from \"../components/UtilityComponent\";\nimport HEADER_NAV_TITLES from \"../header_nav_titles\";\n\nconst Dashboard = (props) => {\n  const isMobile = useMediaQuery(\"(max-width: 500px)\");\n  const userId = localStorage.getItem(\"id\");\n  const [name, setName] = React.useState(\"\");\n  const [enrNo, setEnrNo] = React.useState(\"\");\n  const [projectsStatusData, setProjectsStatusData] = React.useState([]);\n  const [topReporters, setTopReporters] = React.useState([]);\n\n  React.useEffect(() => {\n    axios\n      .get(api_links.API_ROOT + `users/${userId}/`)\n      .then((res) => {\n        setName(res.data.name.split(\" \")[0]);\n        setEnrNo(res.data.enrollment_number);\n      })\n      .catch((err) => console.log(err));\n\n    axios\n      .get(api_links.API_ROOT + \"issuestatustally/\")\n      .then((res) => {\n        let issuesData = [];\n        let resolved = 0,\n          pending = 0,\n          closed = 0;\n        res.data.forEach((status) => {\n          switch (status.type) {\n            case \"Pending\":\n              pending += status.number_of_issues;\n              break;\n            case \"Resolved\":\n              resolved += status.number_of_issues;\n              break;\n            case \"Closed\":\n              closed += status.number_of_issues;\n              break;\n          }\n          issuesData = [\n            [\"Pending\", pending],\n            [\"Resolved\", resolved],\n            [\"Closed\", closed],\n          ];\n        });\n        setProjectsStatusData(issuesData);\n      })\n      .catch((err) => console.log(err));\n\n    axios\n      .get(api_links.API_ROOT + \"topdebuggers/\")\n      .then((res) => {\n        let topDebuggers = [];\n        topDebuggers = res.data.map((user) => [\n          user.user_name,\n          user.num_issues,\n        ]);\n        setTopReporters(topDebuggers);\n      })\n      .catch((err) => console.log(err));\n  }, [props.isAuthenticated]);\n\n  const bugQuoteList = [\n    \"Never allow the same bug to bite you twice.\",\n    \"'It's not a bug - it's an undocumented feature.'\",\n    \"Let he who has a bug free software cast the first stone.\",\n    \"Debugging : Removing Bugs :: Programming : Adding Bugs\",\n    \"Testing can be used to show the presence of bugs, but never to show their absence!\",\n  ];\n\n  const starWarsQuoteList = [\n    `\"It’s not my fault.” – Han Solo`,\n    `“Do. Or do not. There is no try.” – Yoda`,\n    `“I find your lack of faith disturbing.” – Darth Vader`,\n    `“Your eyes can deceive you. Don’t trust them.” – Obi-Wan Kenobi`,\n    `“Your focus determines your reality.” – Qui-Gon Jinn`,\n  ];\n\n  return (\n    <div className=\"dashboard-cards\">\n      <UtilityComponent title={HEADER_NAV_TITLES.DASHBOARD} page=\"HOME\" />\n      <Card className=\"dashboard-hero-welcome-card\">\n        <div\n          className=\"dashboard-hero-image image-shadow\"\n          style={{\n            backgroundImage:\n              props.theme != \"palpatine\"\n                ? \"url(./fix.svg)\"\n                : \"url(./jedi_order.png\",\n          }}\n        ></div>\n        <div className=\"dashboard-hero-text\">\n          <div>\n            <Typography className=\"dashboard-hero-welcome\">\n              {props.theme != \"palpatine\" ? \"Pesticide\" : \"Millenium Falcon\"}\n            </Typography>\n            <hr className=\"divider\" />\n            <Typography className=\"dashboard-hero-quote\">\n              {props.theme != \"palpatine\"\n                ? bugQuoteList[Math.floor(Math.random() * bugQuoteList.length)]\n                : starWarsQuoteList[\n                Math.floor(Math.random() * starWarsQuoteList.length)\n                ]}\n            </Typography>\n            <div className=\"dashboard-hero-buttons\">\n              <Link to=\"/issues\">\n                <Button\n                  className=\"btn-filled-small\"\n                  style={{ whiteSpace: \"nowrap\" }}\n                >\n                  {!isMobile && \"View \"}\n                  {\"Issues\"}\n                </Button>\n              </Link>\n              <Link to=\"/projects\">\n                <Button\n                  className=\"btn-filled-small\"\n                  style={{ whiteSpace: \"nowrap\" }}\n                >\n                  {!isMobile && \"Browse \"}\n                  {\"Projects\"}\n                </Button>\n              </Link>\n              <Link to={`/users/${enrNo}`}>\n                <Button\n                  className=\"btn-filled-small\"\n                  style={{ whiteSpace: \"nowrap\" }}\n                >\n                  My Page\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </Card>\n      <div className=\"data-charts-top-container\">\n        <Card className=\"donut-chart-card\">\n          <center>\n            <Typography style={{ fontSize: \"20px\" }}>\n              <strong>\n                Issues at a Glance\n                <hr className=\"divider\" />\n              </strong>\n            </Typography>\n            <p style={{ fontWeight: \"400\" }}>Status tally of all issues.</p>\n          </center>\n          <PieChart\n            donut={true}\n            colors={\n              props.theme != \"palpatine\"\n                ? [\"#3b7fff\", \"#00ea3f\", \"#ff0021\"]\n                : [\"#4f0000\", \"#960000\", \"#ff0000\"]\n            }\n            data={projectsStatusData}\n            style={{\n              margin: \"10px\",\n            }}\n          />\n        </Card>\n\n        <Card className=\"donut-chart-card\">\n          <center>\n            <Typography style={{ fontSize: \"20px\" }}>\n              <strong>\n                {\"Top \"}\n                {props.theme != \"palpatine\" ? \"Debuggers\" : \"Jedi\"}\n                <hr className=\"divider\" />\n              </strong>\n            </Typography>\n            <p style={{ fontWeight: \"400\" }}>\n              Users who have reported highest number of issues.\n            </p>\n          </center>\n          <BarChart\n            colors={props.theme != \"palpatine\" ? [\"3b7fff\"] : [\"ff0000\"]}\n            data={topReporters}\n          />\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    theme: state.theme.theme || \"default\",\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, null)(Dashboard));\n"]},"metadata":{},"sourceType":"module"}