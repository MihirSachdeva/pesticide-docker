{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/components/NewIssueWithModal.jsx\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Input from \"@material-ui/core/Input\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\nimport { IconButton } from \"@material-ui/core\";\nimport Slide from \"@material-ui/core/Slide\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Grow from \"@material-ui/core/Grow\";\nimport NewIssueForm from \"./NewIssueForm\";\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }\n  }));\n});\nexport default function NewIssueWithModal(props) {\n  const isMobile = useMediaQuery(\"(max-width: 700px)\");\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.floating ? /*#__PURE__*/React.createElement(Fab, {\n    onClick: handleClickOpen,\n    color: \"secondary\",\n    style: {\n      position: \"absolute\",\n      bottom: isMobile ? \"75px\" : \"30px\",\n      right: \"30px\",\n      zIndex: 1202\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(Button, {\n    startIcon: /*#__PURE__*/React.createElement(AddRoundedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 22\n      }\n    }),\n    onClick: handleClickOpen,\n    className: \"btn-filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(Dialog, {\n    fullScreen: fullScreen,\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"responsive-dialog-title\",\n    TransitionComponent: Grow,\n    transitionDuration: {\n      enter: 100,\n      exit: 100\n    },\n    className: !isMobile ? \"modal-rounded\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"responsive-dialog-title\",\n    className: \"modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleClose,\n    className: \"btn-filled-small btn-filled-bg-transparent btn-round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CloseRoundedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  })), props.projectname, \" \\u2022 New Issue\"), /*#__PURE__*/React.createElement(DialogContent, {\n    style: {\n      padding: \"5px 10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NewIssueForm, {\n    project: props.project,\n    handleClose: handleClose,\n    getIssues: props.getIssues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/app/frontend/src/components/NewIssueWithModal.jsx"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","Input","useTheme","makeStyles","CloseRoundedIcon","SendRoundedIcon","IconButton","Slide","PhotoCamera","AddRoundedIcon","Fab","AddIcon","Grow","NewIssueForm","Transition","forwardRef","props","ref","NewIssueWithModal","isMobile","open","setOpen","useState","theme","fullScreen","breakpoints","down","handleClickOpen","handleClose","floating","position","bottom","right","zIndex","enter","exit","projectname","padding","project","getIssues"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Input from \"@material-ui/core/Input\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\nimport { IconButton } from \"@material-ui/core\";\nimport Slide from \"@material-ui/core/Slide\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Grow from \"@material-ui/core/Grow\";\nimport NewIssueForm from \"./NewIssueForm\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function NewIssueWithModal(props) {\n  const isMobile = useMediaQuery(\"(max-width: 700px)\");\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      {props.floating ? (\n        <Fab\n          onClick={handleClickOpen}\n          color=\"secondary\"\n          style={{\n            position: \"absolute\",\n            bottom: isMobile ? \"75px\" : \"30px\",\n            right: \"30px\",\n            zIndex: 1202,\n          }}\n        >\n          <AddIcon />\n        </Fab>\n      ) : (\n        <Button\n          startIcon={<AddRoundedIcon />}\n          onClick={handleClickOpen}\n          className=\"btn-filled\"\n        >\n          Add\n        </Button>\n      )}\n\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n        TransitionComponent={Grow}\n        transitionDuration={{\n          enter: 100,\n          exit: 100,\n        }}\n        className={!isMobile ? \"modal-rounded\" : null}\n      >\n        <DialogTitle id=\"responsive-dialog-title\" className=\"modal-title\">\n          <IconButton\n            onClick={handleClose}\n            className=\"btn-filled-small btn-filled-bg-transparent btn-round\"\n          >\n            <CloseRoundedIcon />\n          </IconButton>\n          {props.projectname} • New Issue\n        </DialogTitle>\n\n        <DialogContent style={{ padding: \"5px 10px\" }}>\n          <NewIssueForm\n            project={props.project}\n            handleClose={handleClose}\n            getIssues={props.getIssues}\n          />\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}