{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/components/FormDialog.jsx\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ColorSwatches from \"./TagColorSwatches\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nconst FormDialog = props => {\n  const handleClose = (choice = false) => {\n    props.confirmFormDialog(props.action, choice, props.data, fields);\n    props.closeFormDialog();\n  };\n\n  const [fields, setFields] = React.useState(props.fields);\n  const [colorSwatchesType, setColorSwatchesType] = React.useState(props.colorSwatchesType);\n\n  const handleFieldChange = event => {\n    let fieldName = event.target.name;\n    let fieldValue = event.target.value;\n    setFields(prevFields => {\n      let index = prevFields.findIndex(field => field.name == fieldName);\n      let newFields = [...prevFields];\n      newFields[index].value = fieldValue;\n      return newFields;\n    });\n  };\n\n  React.useEffect(() => {\n    setFields(props.fields);\n    setColorSwatchesType(props.colorSwatchesType);\n  }, [props]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: props.open,\n    onClose: () => {\n      handleClose(false);\n    },\n    \"aria-labelledby\": \"form-dialog-title\",\n    className: \"alert-dialog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, props.title), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, props.description), fields && fields != [] && fields.map(field => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, field.title), /*#__PURE__*/React.createElement(TextField, {\n    name: field.name,\n    value: field.value,\n    onChange: handleFieldChange,\n    style: {\n      padding: \"0 5px\",\n      margin: \"5px 0 10px 0\",\n      borderRadius: \"4px\",\n      fontWeight: \"600\",\n      backgroundColor: props.bgColor,\n      color: field.value\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }))), props.showColorSwatches && /*#__PURE__*/React.createElement(ColorSwatches, {\n    type: colorSwatchesType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"divider2 divider-thin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      handleClose(false);\n    },\n    color: \"secondary\",\n    className: \"alert-action-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, props.cancel), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"divider-vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      handleClose(true);\n    },\n    color: \"secondary\",\n    className: \"alert-action-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, props.confirm))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    bgColor: [\"dark\", \"solarizedDark\", \"palpatine\"].includes(state.theme.theme) ? \"rgb(0 0 0 / 28%)\" : \"rgb(0 0 0 / 15%)\"\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, null)(FormDialog));","map":{"version":3,"sources":["/app/frontend/src/components/FormDialog.jsx"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Typography","ColorSwatches","connect","withRouter","FormDialog","props","handleClose","choice","confirmFormDialog","action","data","fields","closeFormDialog","setFields","useState","colorSwatchesType","setColorSwatchesType","handleFieldChange","event","fieldName","target","name","fieldValue","value","prevFields","index","findIndex","field","newFields","useEffect","open","title","description","map","padding","margin","borderRadius","fontWeight","backgroundColor","bgColor","color","showColorSwatches","cancel","confirm","mapStateToProps","state","includes","theme"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ColorSwatches from \"./TagColorSwatches\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nconst FormDialog = (props) => {\n  const handleClose = (choice = false) => {\n    props.confirmFormDialog(props.action, choice, props.data, fields);\n    props.closeFormDialog();\n  };\n\n  const [fields, setFields] = React.useState(props.fields);\n  const [colorSwatchesType, setColorSwatchesType] = React.useState(\n    props.colorSwatchesType\n  );\n  const handleFieldChange = (event) => {\n    let fieldName = event.target.name;\n    let fieldValue = event.target.value;\n    setFields((prevFields) => {\n      let index = prevFields.findIndex((field) => field.name == fieldName);\n      let newFields = [...prevFields];\n      newFields[index].value = fieldValue;\n      return newFields;\n    });\n  };\n\n  React.useEffect(() => {\n    setFields(props.fields);\n    setColorSwatchesType(props.colorSwatchesType);\n  }, [props]);\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={() => {\n          handleClose(false);\n        }}\n        aria-labelledby=\"form-dialog-title\"\n        className=\"alert-dialog\"\n      >\n        <DialogTitle id=\"form-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{props.description}</DialogContentText>\n          {fields &&\n            fields != [] &&\n            fields.map((field) => (\n              <>\n                <Typography className=\"form-label\">{field.title}</Typography>\n                <TextField\n                  name={field.name}\n                  value={field.value}\n                  onChange={handleFieldChange}\n                  style={{\n                    padding: \"0 5px\",\n                    margin: \"5px 0 10px 0\",\n                    borderRadius: \"4px\",\n                    fontWeight: \"600\",\n                    backgroundColor: props.bgColor,\n                    color: field.value,\n                  }}\n                />\n              </>\n            ))}\n          {props.showColorSwatches && (\n            <ColorSwatches type={colorSwatchesType} />\n          )}\n        </DialogContent>\n        <hr className=\"divider2 divider-thin\" />\n        <DialogActions>\n          <Button\n            onClick={() => {\n              handleClose(false);\n            }}\n            color=\"secondary\"\n            className=\"alert-action-button\"\n          >\n            {props.cancel}\n          </Button>\n          <div className=\"divider-vertical\"></div>\n          <Button\n            onClick={() => {\n              handleClose(true);\n            }}\n            color=\"secondary\"\n            className=\"alert-action-button\"\n          >\n            {props.confirm}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    bgColor: [\"dark\", \"solarizedDark\", \"palpatine\"].includes(state.theme.theme)\n      ? \"rgb(0 0 0 / 28%)\"\n      : \"rgb(0 0 0 / 15%)\",\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, null)(FormDialog));\n"]},"metadata":{},"sourceType":"module"}