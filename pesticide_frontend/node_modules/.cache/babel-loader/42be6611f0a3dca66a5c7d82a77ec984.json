{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\nimport * as api_links from \"../../APILinks\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, id, is_master) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    currentUser: {\n      id: id,\n      is_master: is_master\n    }\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expirationDate\");\n  localStorage.removeItem(\"id\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post(api_links.REST_AUTH_LOGIN, {\n      username: username,\n      password: password\n    }).then(res => {\n      const userId = res.data.user.id;\n      const token = res.data.key;\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"id\", userId);\n      dispatch(authSuccess(token, userId));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    localStorage.setItem(\"hint\", \"I wish the dark theme was... darker, maybe even as dark as palpatine :)\");\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      axios.defaults.headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Token \" + token\n      };\n      axios.get(api_links.API_ROOT + \"current_user/\").then(res => {\n        const id = res.data[0].id;\n        const is_master = res.data[0].is_master;\n        localStorage.setItem(\"id\", id);\n        dispatch(authSuccess(token, id, is_master));\n      }).catch(err => {\n        console.log(err);\n        dispatch(authFail(err));\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/app/frontend/src/store/actions/auth.js"],"names":["actionTypes","axios","api_links","authStart","type","AUTH_START","authSuccess","token","id","is_master","AUTH_SUCCESS","currentUser","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","authLogin","username","password","dispatch","post","REST_AUTH_LOGIN","then","res","userId","data","user","key","setItem","catch","err","authCheckState","getItem","undefined","defaults","headers","Authorization","get","API_ROOT","console","log"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,SAAZ,MAA2B,gBAA3B;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAEJ,WAAW,CAACK;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,EAAR,EAAYC,SAAZ,KAA0B;AACnD,SAAO;AACLL,IAAAA,IAAI,EAAEJ,WAAW,CAACU,YADb;AAELH,IAAAA,KAAK,EAAEA,KAFF;AAGLI,IAAAA,WAAW,EAAE;AACXH,MAAAA,EAAE,EAAEA,EADO;AAEXC,MAAAA,SAAS,EAAEA;AAFA;AAHR,GAAP;AAQD,CATM;AAWP,OAAO,MAAMG,QAAQ,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLT,IAAAA,IAAI,EAAEJ,WAAW,CAACc,SADb;AAELD,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;AAOP,OAAO,MAAME,MAAM,GAAG,MAAM;AAC1BC,EAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,gBAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,IAAxB;AACA,SAAO;AACLb,IAAAA,IAAI,EAAEJ,WAAW,CAACkB;AADb,GAAP;AAGD,CAPM;AASP,OAAO,MAAMC,SAAS,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC/C,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACnB,SAAS,EAAV,CAAR;AACAF,IAAAA,KAAK,CACFsB,IADH,CACQrB,SAAS,CAACsB,eADlB,EACmC;AAC/BJ,MAAAA,QAAQ,EAAEA,QADqB;AAE/BC,MAAAA,QAAQ,EAAEA;AAFqB,KADnC,EAKGI,IALH,CAKSC,GAAD,IAAS;AACb,YAAMC,MAAM,GAAGD,GAAG,CAACE,IAAJ,CAASC,IAAT,CAAcrB,EAA7B;AACA,YAAMD,KAAK,GAAGmB,GAAG,CAACE,IAAJ,CAASE,GAAvB;AACAd,MAAAA,YAAY,CAACe,OAAb,CAAqB,OAArB,EAA8BxB,KAA9B;AACAS,MAAAA,YAAY,CAACe,OAAb,CAAqB,IAArB,EAA2BJ,MAA3B;AACAL,MAAAA,QAAQ,CAAChB,WAAW,CAACC,KAAD,EAAQoB,MAAR,CAAZ,CAAR;AACD,KAXH,EAYGK,KAZH,CAYUC,GAAD,IAAS;AACdX,MAAAA,QAAQ,CAACV,QAAQ,CAACqB,GAAD,CAAT,CAAR;AACD,KAdH;AAeD,GAjBD;AAkBD,CAnBM;AAqBP,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC,SAAQZ,QAAD,IAAc;AACnB,UAAMf,KAAK,GAAGS,YAAY,CAACmB,OAAb,CAAqB,OAArB,CAAd;AACAnB,IAAAA,YAAY,CAACe,OAAb,CAAqB,MAArB,EAA6B,yEAA7B;;AACA,QAAIxB,KAAK,KAAK6B,SAAd,EAAyB;AACvBd,MAAAA,QAAQ,CAACP,MAAM,EAAP,CAAR;AACD,KAFD,MAEO;AACLd,MAAAA,KAAK,CAACoC,QAAN,CAAeC,OAAf,GAAyB;AACvB,wBAAgB,kBADO;AAEvBC,QAAAA,aAAa,EAAE,WAAWhC;AAFH,OAAzB;AAIAN,MAAAA,KAAK,CACFuC,GADH,CACOtC,SAAS,CAACuC,QAAV,GAAqB,eAD5B,EAEGhB,IAFH,CAESC,GAAD,IAAS;AACb,cAAMlB,EAAE,GAAGkB,GAAG,CAACE,IAAJ,CAAS,CAAT,EAAYpB,EAAvB;AACA,cAAMC,SAAS,GAAGiB,GAAG,CAACE,IAAJ,CAAS,CAAT,EAAYnB,SAA9B;AACAO,QAAAA,YAAY,CAACe,OAAb,CAAqB,IAArB,EAA2BvB,EAA3B;AACAc,QAAAA,QAAQ,CAAChB,WAAW,CAACC,KAAD,EAAQC,EAAR,EAAYC,SAAZ,CAAZ,CAAR;AACD,OAPH,EAQGuB,KARH,CAQUC,GAAD,IAAS;AACdS,QAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ;AACAX,QAAAA,QAAQ,CAACV,QAAQ,CAACqB,GAAD,CAAT,CAAR;AACD,OAXH;AAYD;AACF,GAvBD;AAwBD,CAzBM","sourcesContent":["import * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\nimport * as api_links from \"../../APILinks\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START,\n  };\n};\n\nexport const authSuccess = (token, id, is_master) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    currentUser: {\n      id: id,\n      is_master: is_master,\n    },\n  };\n};\n\nexport const authFail = (error) => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error,\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expirationDate\");\n  localStorage.removeItem(\"id\");\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n  };\n};\n\nexport const authLogin = (username, password) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    axios\n      .post(api_links.REST_AUTH_LOGIN, {\n        username: username,\n        password: password,\n      })\n      .then((res) => {\n        const userId = res.data.user.id;\n        const token = res.data.key;\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"id\", userId);\n        dispatch(authSuccess(token, userId));\n      })\n      .catch((err) => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authCheckState = () => {\n  return (dispatch) => {\n    const token = localStorage.getItem(\"token\");\n    localStorage.setItem(\"hint\", \"I wish the dark theme was... darker, maybe even as dark as palpatine :)\");\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      axios.defaults.headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Token \" + token,\n      };\n      axios\n        .get(api_links.API_ROOT + \"current_user/\")\n        .then((res) => {\n          const id = res.data[0].id;\n          const is_master = res.data[0].is_master;\n          localStorage.setItem(\"id\", id);\n          dispatch(authSuccess(token, id, is_master));\n        })\n        .catch((err) => {\n          console.log(err);\n          dispatch(authFail(err));\n        });\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}